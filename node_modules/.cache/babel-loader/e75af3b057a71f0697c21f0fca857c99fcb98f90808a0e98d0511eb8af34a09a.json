{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taha\\\\Desktop\\\\notion-excel-sync\\\\excel-notion-ui\\\\src\\\\AutoSyncDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Dashboard.css';\nimport { formatDistanceToNow, parseISO } from 'date-fns';\nimport { tr } from 'date-fns/locale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\n// ðŸš¨ GÃœNCELLENMÄ°Åž TÄ°P: Backend'den gelen isimleri ve mapping_details listesini iÃ§erir\n\nfunction AutoSyncDashboard() {\n  _s();\n  // configs state'i gÃ¼ncellenmiÅŸ tip ile tanÄ±mlanmalÄ±\n  const [configs, setConfigs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [message, setMessage] = useState('');\n  const userId = localStorage.getItem('user_id');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  // currentMappings state'i zaten doÄŸru tipi kullanÄ±yor\n  const [currentMappings, setCurrentMappings] = useState([]);\n  const [currentConfigName, setCurrentConfigName] = useState('');\n  const [modalLoading, setModalLoading] = useState(false);\n  const [currentConfigId, setCurrentConfigId] = useState(null);\n\n  // ... (useEffect, fetchConfigs fonksiyonlarÄ± aynÄ± kalÄ±r)\n\n  useEffect(() => {\n    if (userId) {\n      fetchConfigs(userId);\n    } else {\n      setMessage('KullanÄ±cÄ± kimliÄŸi bulunamadÄ±. LÃ¼tfen giriÅŸ yapÄ±n.');\n      setLoading(false);\n    }\n  }, [userId]);\n  const fetchConfigs = async currentUserId => {\n    setLoading(true);\n    try {\n      const res = await fetch(`${API_BASE_URL}/autosync/list/${currentUserId}`);\n      const data = await res.json(); // Tipi doÄŸru kullanÄ±yoruz\n\n      if (res.ok) {\n        // Backend'den mapping_details geliyorsa, direkt onu kullanÄ±rÄ±z\n        setConfigs(data || []);\n        setMessage('');\n      } else {\n        setMessage(`Ayarlar alÄ±namadÄ±: ${data.detail || data.error || 'Bilinmeyen Hata'}`);\n        setConfigs([]);\n      }\n    } catch {\n      setMessage('AyarlarÄ± getirirken aÄŸ hatasÄ± oluÅŸtu.');\n      setConfigs([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // EÅŸleÅŸme detaylarÄ±nÄ± aÃ§ma fonksiyonu\n  // Not: Normalde fetchConfigs'te mapping_details geldiÄŸi iÃ§in bu fonksiyona gerek kalmaz. \n  // Ancak modal'Ä±n aÃ§Ä±lmasÄ± ve baÅŸlÄ±ÄŸÄ±nÄ±n ayarlanmasÄ± iÃ§in bu mevcut yapÄ±yÄ± koruyorum.\n  const openMappingModal = config => {\n    setCurrentMappings(config.mapping_details || []);\n    setCurrentConfigName(config.direction === 'excel-to-notion' ? 'Excel â†’ Notion' : 'Notion â†’ Excel');\n    setCurrentConfigId(config.id);\n    setIsModalOpen(true);\n    setMessage(''); // MesajÄ± temizle\n  };\n\n  // Mevcut fetchMappingDetails fonksiyonu kaldÄ±rÄ±ldÄ±, Ã§Ã¼nkÃ¼ ana liste API'si artÄ±k detaylarÄ± getiriyor.\n  // Ancak sizin eski yapÄ±nÄ±zda mapping ID ile Ã§ekme olduÄŸu iÃ§in, isterseniz bu kodu tutabilirsiniz.\n  // Biz burada backend'den gelen mapping_details'i kullanarak modalÄ± aÃ§an openMappingModal'Ä± kullanacaÄŸÄ±z.\n\n  const renderMappingModal = () => {\n    if (!isModalOpen) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setIsModalOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [currentConfigName, \" E\\u015Fle\\u015Fme Detaylar\\u0131\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), currentMappings.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"modal-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Excel S\\xFCtunu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Notion \\xD6zelli\\u011Fi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Aksiyonlar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentMappings.map(m => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: m.excel_column || '---'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: m.notion_property || '---'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleRemoveAutoSync(m.id, currentConfigId);\n                  },\n                  className: \"action-btn delete\",\n                  title: \"Bu e\\u015Fle\\u015Fmeyi otomatik senkronizasyondan kald\\u0131r\",\n                  children: \"Kald\\u0131r\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 41\n              }, this)]\n            }, m.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Bu i\\u015Fte kay\\u0131tl\\u0131 otomatik senkronizasyon e\\u015Fle\\u015Fmesi bulunmamaktad\\u0131r.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-btn close-btn\",\n          onClick: () => setIsModalOpen(false),\n          children: \"Kapat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  };\n  const handleRemoveAutoSync = async (mappingId, configId) => {\n    if (!configId) {\n      setMessage('Hata: Config ID bulunamadÄ±.');\n      return;\n    }\n    if (!window.confirm('Bu sÃ¼tun eÅŸleÅŸmesinin otomatik senkronizasyonunu kalÄ±cÄ± olarak kaldÄ±rmak istediÄŸinizden emin misiniz?')) {\n      return;\n    }\n    try {\n      const res = await fetch(`${API_BASE_URL}/autosync/mapping/disable/${mappingId}/${configId}`, {\n        method: 'POST'\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMessage(data.message);\n        // Modal'daki gÃ¶rÃ¼nÃ¼mÃ¼ gÃ¼ncelle: KaldÄ±rÄ±lan kaydÄ± listeden Ã§Ä±kar\n        setCurrentMappings(prev => prev.filter(m => m.id !== mappingId));\n        // Ana Dashboard listesinin gÃ¼ncellenmesini tetikle (Mapping sayÄ±sÄ± deÄŸiÅŸtiÄŸi iÃ§in)\n        fetchConfigs(userId);\n      } else {\n        setMessage(`KaldÄ±rma iÅŸlemi baÅŸarÄ±sÄ±z: ${data.detail || data.error}`);\n      }\n    } catch {\n      setMessage('KaldÄ±rma iÅŸlemi sÄ±rasÄ±nda aÄŸ hatasÄ± oluÅŸtu.');\n    }\n  };\n  const triggerFullSync = async configId => {\n    setMessage('');\n    try {\n      const res = await fetch(`${API_BASE_URL}/autosync/trigger/${configId}`, {\n        method: 'POST'\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMessage(`KonfigÃ¼rasyon ID ${configId} iÃ§in manuel senkronizasyon baÅŸlatÄ±ldÄ±!`);\n        setTimeout(() => fetchConfigs(userId), 3000);\n      } else {\n        setMessage(`Manuel Sync BaÅŸarÄ±sÄ±z: ${data.detail || data.error}`);\n      }\n    } catch {\n      setMessage('Manuel Sync sÄ±rasÄ±nda aÄŸ hatasÄ± oluÅŸtu.');\n    }\n  };\n  const deleteSyncConfig = async configId => {\n    if (!window.confirm('Bu otomatik senkronizasyon iÅŸini silmek istediÄŸinizden emin misiniz?')) {\n      return;\n    }\n    try {\n      const res = await fetch(`${API_BASE_URL}/autosync/delete/${configId}`, {\n        method: 'DELETE'\n      });\n      if (res.ok) {\n        setMessage('Senkronizasyon iÅŸi baÅŸarÄ±yla silindi.');\n        // State'ten sil\n        setConfigs(prev => prev.filter(c => c.id !== configId));\n      } else {\n        const data = await res.json();\n        setMessage(`Silinemedi: ${data.detail || data.error}`);\n      }\n    } catch {\n      setMessage('Silme iÅŸlemi sÄ±rasÄ±nda aÄŸ hatasÄ± oluÅŸtu.');\n    }\n  };\n  const formatLastSync = dateString => {\n    if (!dateString) return 'HiÃ§ senkronize edilmedi';\n    try {\n      const date = parseISO(dateString);\n      // return `${formatDistanceToNow(date, { addSuffix: true, locale: tr })} Ã¶nce`; // Bu satÄ±r 'bir saat Ã¶nce Ã¶nce' gibi yanlÄ±ÅŸ Ã§Ä±kabiliyor.\n      // Sadece formatDistanceToNow kullanmak yeterli.\n      return formatDistanceToNow(date, {\n        addSuffix: true,\n        locale: tr\n      });\n    } catch {\n      return 'GeÃ§ersiz Tarih';\n    }\n  };\n\n  // --- Render MetotlarÄ± ---\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ayarlar y\\xFCkleniyor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Otomatik Senkronizasyon Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }, this), configs.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aktif otomatik senkronizasyon i\\u015Fi bulunmamaktad\\u0131r.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.history.back(),\n        className: \"secondary-btn\",\n        children: \"Yeni Sync Olu\\u015Ftur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"sync-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Y\\xF6n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Kaynak/Hedef\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"S\\u0131kl\\u0131k\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"E\\u015Fle\\u015Fme Say\\u0131s\\u0131\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Son Senk.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Durum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Aksiyon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: configs.map(config => {\n          var _config$mapping_detai;\n          return (\n            /*#__PURE__*/\n            // TÃ¼m satÄ±r yerine, sadece Mapping sayÄ±sÄ± hÃ¼cresi modalÄ± aÃ§acak.\n            _jsxDEV(\"tr\", {\n              className: config.is_active ? 'active-row' : 'inactive-row',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: config.direction === 'excel-to-notion' ? 'Excel â†’ Notion' : 'Notion â†’ Excel'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"source-target-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Excel:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 45\n                    }, this), \" \", config.excel_file_name || 'N/A', \" (\", config.excel_worksheet_name || 'Sayfa1', \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Notion:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 45\n                    }, this), \" \", config.notion_db_name || 'N/A']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Her \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: config.interval_minutes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 41\n                }, this), \" Dakika\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"mapping-count-cell\",\n                onClick: () => openMappingModal(config),\n                title: \"E\\u015Fle\\u015Fme detaylar\\u0131n\\u0131 g\\xF6rmek i\\xE7in t\\u0131klay\\u0131n\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: ((_config$mapping_detai = config.mapping_details) === null || _config$mapping_detai === void 0 ? void 0 : _config$mapping_detai.length) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 37\n                }, this), \" S\\xFCtun\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatLastSync(config.last_synced)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status-badge ${config.is_active ? 'active' : 'inactive'}`,\n                  children: config.is_active ? 'AKTÄ°F' : 'DURDURULDU'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action-cell\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation(); // SatÄ±r tÄ±klamasÄ±nÄ± engelle\n                    triggerFullSync(config.id);\n                  },\n                  className: \"action-btn activate\",\n                  style: {\n                    marginRight: '5px'\n                  },\n                  title: \"Hemen senkronizasyonu ba\\u015Flat\",\n                  children: \"Sync Yap\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    deleteSyncConfig(config.id);\n                  },\n                  className: \"action-btn delete\",\n                  title: \"Sil\",\n                  children: \"Sil\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 33\n              }, this)]\n            }, config.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchConfigs(userId),\n      className: \"secondary-btn refresh-btn\",\n      children: \"Listeyi Yenile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }, this), renderMappingModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 9\n  }, this);\n}\n_s(AutoSyncDashboard, \"ieNvw8+tVw0OPN+xA2/bgRcjziI=\");\n_c = AutoSyncDashboard;\nexport default AutoSyncDashboard;\nvar _c;\n$RefreshReg$(_c, \"AutoSyncDashboard\");","map":{"version":3,"names":["React","useState","useEffect","formatDistanceToNow","parseISO","tr","jsxDEV","_jsxDEV","API_BASE_URL","AutoSyncDashboard","_s","configs","setConfigs","loading","setLoading","message","setMessage","userId","localStorage","getItem","isModalOpen","setIsModalOpen","currentMappings","setCurrentMappings","currentConfigName","setCurrentConfigName","modalLoading","setModalLoading","currentConfigId","setCurrentConfigId","fetchConfigs","currentUserId","res","fetch","data","json","ok","detail","error","openMappingModal","config","mapping_details","direction","id","renderMappingModal","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","length","map","m","excel_column","notion_property","handleRemoveAutoSync","title","mappingId","configId","window","confirm","method","prev","filter","triggerFullSync","setTimeout","deleteSyncConfig","c","formatLastSync","dateString","date","addSuffix","locale","history","back","_config$mapping_detai","is_active","excel_file_name","excel_worksheet_name","notion_db_name","interval_minutes","last_synced","style","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/Taha/Desktop/notion-excel-sync/excel-notion-ui/src/AutoSyncDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Dashboard.css'; \r\nimport { formatDistanceToNow, parseISO } from 'date-fns';\r\nimport { tr } from 'date-fns/locale';\r\n\r\n\r\nconst API_BASE_URL = 'http://127.0.0.1:8000';\r\n\r\n\r\n\r\ntype MappingDetail = {\r\n    id: number;\r\n    excel_column: string;\r\n    notion_property: string;\r\n    data_type: string;\r\n    user_id: number; \r\n    is_auto_sync_enabled: boolean;\r\n};\r\n\r\n\r\n// ðŸš¨ GÃœNCELLENMÄ°Åž TÄ°P: Backend'den gelen isimleri ve mapping_details listesini iÃ§erir\r\ntype AutoSyncConfig = {\r\n    id: number;\r\n    user_id: number;\r\n    excel_file_id: string;\r\n    notion_database_id: string;\r\n    direction: 'excel-to-notion' | 'notion-to-excel';\r\n    interval_minutes: number;\r\n    is_active: boolean;\r\n    last_synced: string | null;\r\n    created_at: string;\r\n    \r\n    // Yeni Alanlar (Backend'den Ã§ekilen isimler)\r\n    excel_file_name: string;      // ðŸ‘ˆ YENÄ°\r\n    excel_worksheet_name: string; // ðŸ‘ˆ YENÄ°\r\n    notion_db_name: string;       // ðŸ‘ˆ YENÄ°\r\n\r\n    // Mapping sayÄ±sÄ± yerine detay listesini kullanÄ±yoruz (sayÄ±sÄ±nÄ± buradan alacaÄŸÄ±z)\r\n    mapping_details: MappingDetail[]; // ðŸ‘ˆ GÃœNCELLENDÄ°\r\n};\r\n\r\n\r\n\r\nfunction AutoSyncDashboard() {\r\n    // configs state'i gÃ¼ncellenmiÅŸ tip ile tanÄ±mlanmalÄ±\r\n    const [configs, setConfigs] = useState<AutoSyncConfig[]>([]); \r\n    const [loading, setLoading] = useState(true);\r\n    const [message, setMessage] = useState('');\r\n    const userId = localStorage.getItem('user_id');\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    // currentMappings state'i zaten doÄŸru tipi kullanÄ±yor\r\n    const [currentMappings, setCurrentMappings] = useState<MappingDetail[]>([]);\r\n    const [currentConfigName, setCurrentConfigName] = useState('');\r\n    const [modalLoading, setModalLoading] = useState(false);\r\n    const [currentConfigId, setCurrentConfigId] = useState<number | null>(null); \r\n\r\n    \r\n    // ... (useEffect, fetchConfigs fonksiyonlarÄ± aynÄ± kalÄ±r)\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            fetchConfigs(userId);\r\n        } else {\r\n            setMessage('KullanÄ±cÄ± kimliÄŸi bulunamadÄ±. LÃ¼tfen giriÅŸ yapÄ±n.');\r\n            setLoading(false);\r\n        }\r\n    }, [userId]);\r\n\r\n    const fetchConfigs = async (currentUserId: string) => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await fetch(`${API_BASE_URL}/autosync/list/${currentUserId}`); \r\n            \r\n            const data: AutoSyncConfig[] = await res.json(); // Tipi doÄŸru kullanÄ±yoruz\r\n            \r\n            if (res.ok) {\r\n                // Backend'den mapping_details geliyorsa, direkt onu kullanÄ±rÄ±z\r\n                setConfigs(data || []); \r\n                setMessage('');\r\n            } else {\r\n                setMessage(`Ayarlar alÄ±namadÄ±: ${(data as any).detail || (data as any).error || 'Bilinmeyen Hata'}`);\r\n                setConfigs([]); \r\n            }\r\n        } catch {\r\n            setMessage('AyarlarÄ± getirirken aÄŸ hatasÄ± oluÅŸtu.');\r\n            setConfigs([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    \r\n    // EÅŸleÅŸme detaylarÄ±nÄ± aÃ§ma fonksiyonu\r\n    // Not: Normalde fetchConfigs'te mapping_details geldiÄŸi iÃ§in bu fonksiyona gerek kalmaz. \r\n    // Ancak modal'Ä±n aÃ§Ä±lmasÄ± ve baÅŸlÄ±ÄŸÄ±nÄ±n ayarlanmasÄ± iÃ§in bu mevcut yapÄ±yÄ± koruyorum.\r\n    const openMappingModal = (config: AutoSyncConfig) => {\r\n        setCurrentMappings(config.mapping_details || []);\r\n        setCurrentConfigName(config.direction === 'excel-to-notion' ? 'Excel â†’ Notion' : 'Notion â†’ Excel');\r\n        setCurrentConfigId(config.id); \r\n        setIsModalOpen(true);\r\n        setMessage(''); // MesajÄ± temizle\r\n    };\r\n\r\n    // Mevcut fetchMappingDetails fonksiyonu kaldÄ±rÄ±ldÄ±, Ã§Ã¼nkÃ¼ ana liste API'si artÄ±k detaylarÄ± getiriyor.\r\n    // Ancak sizin eski yapÄ±nÄ±zda mapping ID ile Ã§ekme olduÄŸu iÃ§in, isterseniz bu kodu tutabilirsiniz.\r\n    // Biz burada backend'den gelen mapping_details'i kullanarak modalÄ± aÃ§an openMappingModal'Ä± kullanacaÄŸÄ±z.\r\n\r\n    const renderMappingModal = () => {\r\n        if (!isModalOpen) return null;\r\n\r\n        return (\r\n            <div className=\"modal-overlay\" onClick={() => setIsModalOpen(false)}>\r\n                <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n                    <h3>{currentConfigName} EÅŸleÅŸme DetaylarÄ±</h3>\r\n                    {/* Modal Loading'i kaldÄ±rdÄ±m, Ã§Ã¼nkÃ¼ data ana API'den geldiÄŸi iÃ§in hÄ±zlÄ± aÃ§Ä±lmalÄ± */}\r\n                    {currentMappings.length > 0 ? (\r\n                        <table className=\"modal-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Excel SÃ¼tunu</th>\r\n                                    <th>Notion Ã–zelliÄŸi</th>\r\n                                    <th>Aksiyonlar</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {currentMappings.map(m => (\r\n                                    <tr key={m.id}>\r\n                                        <td>{m.excel_column || '---'}</td> \r\n                                        <td>{m.notion_property || '---'}</td>\r\n                                        <td className=\"action-cell\">\r\n                                            <button \r\n                                                onClick={(e) => {\r\n                                                    e.stopPropagation();\r\n                                                    handleRemoveAutoSync(m.id, currentConfigId!); \r\n                                                }}\r\n                                                className=\"action-btn delete\"\r\n                                                title=\"Bu eÅŸleÅŸmeyi otomatik senkronizasyondan kaldÄ±r\"\r\n                                            >\r\n                                                KaldÄ±r\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    ) : (\r\n                        <p>Bu iÅŸte kayÄ±tlÄ± otomatik senkronizasyon eÅŸleÅŸmesi bulunmamaktadÄ±r.</p>\r\n                    )}\r\n                    <button className=\"primary-btn close-btn\" onClick={() => setIsModalOpen(false)}>Kapat</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const handleRemoveAutoSync = async (mappingId: number, configId: number) => {\r\n        if (!configId) {\r\n            setMessage('Hata: Config ID bulunamadÄ±.');\r\n            return;\r\n        }\r\n        if (!window.confirm('Bu sÃ¼tun eÅŸleÅŸmesinin otomatik senkronizasyonunu kalÄ±cÄ± olarak kaldÄ±rmak istediÄŸinizden emin misiniz?')) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const res = await fetch(`${API_BASE_URL}/autosync/mapping/disable/${mappingId}/${configId}`, {\r\n                method: 'POST',\r\n            });\r\n            \r\n            const data = await res.json();\r\n            \r\n            if (res.ok) {\r\n                setMessage(data.message);\r\n                // Modal'daki gÃ¶rÃ¼nÃ¼mÃ¼ gÃ¼ncelle: KaldÄ±rÄ±lan kaydÄ± listeden Ã§Ä±kar\r\n                setCurrentMappings(prev => prev.filter(m => m.id !== mappingId));\r\n                // Ana Dashboard listesinin gÃ¼ncellenmesini tetikle (Mapping sayÄ±sÄ± deÄŸiÅŸtiÄŸi iÃ§in)\r\n                fetchConfigs(userId!); \r\n\r\n            } else {\r\n                setMessage(`KaldÄ±rma iÅŸlemi baÅŸarÄ±sÄ±z: ${data.detail || data.error}`);\r\n            }\r\n        } catch {\r\n            setMessage('KaldÄ±rma iÅŸlemi sÄ±rasÄ±nda aÄŸ hatasÄ± oluÅŸtu.');\r\n        }\r\n    };\r\n\r\n    const triggerFullSync = async (configId: number) => {\r\n        setMessage('');\r\n        try {\r\n            const res = await fetch(`${API_BASE_URL}/autosync/trigger/${configId}`, {\r\n                method: 'POST',\r\n            });\r\n            \r\n            const data = await res.json();\r\n            \r\n            if (res.ok) {\r\n                setMessage(`KonfigÃ¼rasyon ID ${configId} iÃ§in manuel senkronizasyon baÅŸlatÄ±ldÄ±!`);\r\n                setTimeout(() => fetchConfigs(userId!), 3000); \r\n            } else {\r\n                setMessage(`Manuel Sync BaÅŸarÄ±sÄ±z: ${data.detail || data.error}`);\r\n            }\r\n        } catch {\r\n            setMessage('Manuel Sync sÄ±rasÄ±nda aÄŸ hatasÄ± oluÅŸtu.');\r\n        }\r\n    };\r\n\r\n    const deleteSyncConfig = async (configId: number) => {\r\n        if (!window.confirm('Bu otomatik senkronizasyon iÅŸini silmek istediÄŸinizden emin misiniz?')) {\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            const res = await fetch(`${API_BASE_URL}/autosync/delete/${configId}`, {\r\n                method: 'DELETE',\r\n            });\r\n            \r\n            if (res.ok) {\r\n                setMessage('Senkronizasyon iÅŸi baÅŸarÄ±yla silindi.');\r\n                // State'ten sil\r\n                setConfigs(prev => prev.filter(c => c.id !== configId));\r\n            } else {\r\n                const data = await res.json();\r\n                setMessage(`Silinemedi: ${data.detail || data.error}`);\r\n            }\r\n        } catch {\r\n            setMessage('Silme iÅŸlemi sÄ±rasÄ±nda aÄŸ hatasÄ± oluÅŸtu.');\r\n        }\r\n    };\r\n\r\n    const formatLastSync = (dateString: string | null) => {\r\n        if (!dateString) return 'HiÃ§ senkronize edilmedi';\r\n        try {\r\n            const date = parseISO(dateString);\r\n            // return `${formatDistanceToNow(date, { addSuffix: true, locale: tr })} Ã¶nce`; // Bu satÄ±r 'bir saat Ã¶nce Ã¶nce' gibi yanlÄ±ÅŸ Ã§Ä±kabiliyor.\r\n            // Sadece formatDistanceToNow kullanmak yeterli.\r\n            return formatDistanceToNow(date, { addSuffix: true, locale: tr });\r\n        } catch {\r\n            return 'GeÃ§ersiz Tarih';\r\n        }\r\n    };\r\n    \r\n    // --- Render MetotlarÄ± ---\r\n    \r\n    if (loading) {\r\n        return <div className=\"dashboard-container\"><p>Ayarlar yÃ¼kleniyor...</p></div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <h2>Otomatik Senkronizasyon Dashboard</h2>\r\n            {message && <div className=\"dashboard-message\">{message}</div>}\r\n\r\n            {configs.length === 0 ? (\r\n                <div className=\"empty-state\">\r\n                    <p>Aktif otomatik senkronizasyon iÅŸi bulunmamaktadÄ±r.</p>\r\n                    <button onClick={() => window.history.back()} className=\"secondary-btn\">Yeni Sync OluÅŸtur</button>\r\n                </div>\r\n            ) : (\r\n                <table className=\"sync-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>YÃ¶n</th>\r\n                            <th>Kaynak/Hedef</th>\r\n                            <th>SÄ±klÄ±k</th>\r\n                            <th>EÅŸleÅŸme SayÄ±sÄ±</th>\r\n                            <th>Son Senk.</th>\r\n                            <th>Durum</th>\r\n                            <th>Aksiyon</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {configs.map(config => (\r\n                            // TÃ¼m satÄ±r yerine, sadece Mapping sayÄ±sÄ± hÃ¼cresi modalÄ± aÃ§acak.\r\n                            <tr key={config.id} className={config.is_active ? 'active-row' : 'inactive-row'}>\r\n                                <td>\r\n                                    {/* YÃ¶n */}\r\n                                    {config.direction === 'excel-to-notion' \r\n                                        ? 'Excel â†’ Notion' \r\n                                        : 'Notion â†’ Excel'}\r\n                                </td>\r\n\r\n                                {/* ðŸš¨ GÃœNCELLENDÄ°: Kaynak/Hedef - Ä°simleri gÃ¶ster */}\r\n                                <td>\r\n                                    <div className=\"source-target-details\">\r\n                                        <p>\r\n                                            <strong>Excel:</strong> {config.excel_file_name || 'N/A'} ({config.excel_worksheet_name || 'Sayfa1'})\r\n                                        </p>\r\n                                        <p>\r\n                                            <strong>Notion:</strong> {config.notion_db_name || 'N/A'}\r\n                                        </p>\r\n                                    </div>\r\n                                </td>\r\n\r\n                                {/* ðŸš¨ GÃœNCELLENDÄ°: SÄ±klÄ±k */}\r\n                                <td>Her <strong>{config.interval_minutes}</strong> Dakika</td>\r\n                                \r\n                                {/* ðŸš¨ GÃœNCELLENDÄ°: EÅŸleÅŸme SayÄ±sÄ± (TÄ±klanabilir) */}\r\n                                <td \r\n                                    className=\"mapping-count-cell\"\r\n                                    onClick={() => openMappingModal(config)}\r\n                                    title=\"EÅŸleÅŸme detaylarÄ±nÄ± gÃ¶rmek iÃ§in tÄ±klayÄ±n\"\r\n                                >\r\n                                    <strong>{config.mapping_details?.length || 0}</strong> SÃ¼tun\r\n                                </td>\r\n                                \r\n                                {/* ðŸš¨ GÃœNCELLENDÄ°: Son Senk. */}\r\n                                <td>{formatLastSync(config.last_synced)}</td>\r\n                                \r\n                                <td>\r\n                                    <span className={`status-badge ${config.is_active ? 'active' : 'inactive'}`}>\r\n                                        {config.is_active ? 'AKTÄ°F' : 'DURDURULDU'}\r\n                                    </span>\r\n                                </td>\r\n                                \r\n                                <td className=\"action-cell\">\r\n                                    {/* HÄ±zlÄ± Sync Butonu */}\r\n                                    <button \r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation(); // SatÄ±r tÄ±klamasÄ±nÄ± engelle\r\n                                            triggerFullSync(config.id);\r\n                                        }}\r\n                                        className=\"action-btn activate\"\r\n                                        style={{ marginRight: '5px' }}\r\n                                        title=\"Hemen senkronizasyonu baÅŸlat\"\r\n                                    >\r\n                                        Sync Yap\r\n                                    </button>\r\n                                    \r\n                                    {/* Sil Butonu */}\r\n                                    <button \r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            deleteSyncConfig(config.id);\r\n                                        }}\r\n                                        className=\"action-btn delete\"\r\n                                        title=\"Sil\"\r\n                                    >\r\n                                        Sil\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n            \r\n            {/* Yenile butonu */}\r\n            <button onClick={() => fetchConfigs(userId!)} className=\"secondary-btn refresh-btn\">\r\n                Listeyi Yenile\r\n            </button>\r\n            {renderMappingModal()} \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AutoSyncDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
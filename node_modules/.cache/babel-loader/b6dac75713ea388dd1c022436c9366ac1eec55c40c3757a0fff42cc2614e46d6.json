{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taha\\\\Desktop\\\\notion-excel-sync\\\\excel-notion-ui\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:8000';\nfunction App() {\n  _s();\n  const [step, setStep] = useState('connect');\n  const [excelFiles, setExcelFiles] = useState([]);\n  const [excelColumns, setExcelColumns] = useState([]);\n  const [notionProperties, setNotionProperties] = useState([]);\n  const [selectedExcelId, setSelectedExcelId] = useState('');\n  const [notionDbId, setNotionDbId] = useState('');\n  const [message, setMessage] = useState('');\n  const [userId, setUserId] = useState(null);\n  const [mappings, setMappings] = useState([]);\n  const [syncDirection, setSyncDirection] = useState('excel-to-notion');\n\n  // --- Microsoft Login & Fetch Excel Files ---\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const authSuccess = params.get('auth_success');\n    const receivedUserId = params.get('user_id');\n    const storedUserId = localStorage.getItem('user_id');\n    if (authSuccess === 'true' && receivedUserId) {\n      setUserId(receivedUserId);\n      setStep('select');\n      localStorage.setItem('user_id', receivedUserId);\n      fetchExcelFiles(receivedUserId);\n      window.history.replaceState({}, document.title, window.location.pathname);\n    } else if (storedUserId) {\n      setUserId(storedUserId);\n      setStep('select');\n      fetchExcelFiles(storedUserId);\n    } else setStep('connect');\n  }, []);\n  const handleMicrosoftConnect = () => {\n    window.location.href = `${API_BASE_URL}/connect/microsoft`;\n  };\n  const fetchExcelFiles = async uid => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/get-excel-files?user_id=${uid}`);\n      const data = await res.json();\n      if (res.ok) setExcelFiles(data.files);else setMessage(`Excel dosyaları alınamadı: ${data.error}`);\n    } catch {\n      setMessage('Excel dosyaları alınırken ağ hatası oluştu.');\n    }\n  };\n  const fetchExcelColumns = async fileId => {\n    if (!userId) return;\n    try {\n      const res = await fetch(`${API_BASE_URL}/get-excel-columns?excel_file_id=${fileId}&user_id=${userId}`);\n      const data = await res.json();\n      if (res.ok) {\n        const columns = data.columns.map(name => ({\n          name\n        }));\n        setExcelColumns(columns);\n      } else setMessage(`Excel sütunları alınamadı: ${data.error}`);\n    } catch {\n      setMessage('Excel sütunları alınırken ağ hatası oluştu.');\n    }\n  };\n  const fetchNotionProperties = async () => {\n    if (!notionDbId) {\n      setMessage('Lütfen Notion Veritabanı ID\\'si girin.');\n      return;\n    }\n    try {\n      const res = await fetch(`${API_BASE_URL}/get-notion-properties?notion_database_id=${notionDbId}`);\n      const data = await res.json();\n      if (res.ok) {\n        setNotionProperties(data.properties);\n\n        // --- Otomatik eşleşme: isim uyumlu olanlar\n        const autoMappings = [];\n        if (syncDirection === 'excel-to-notion') {\n          excelColumns.forEach(col => {\n            const match = data.properties.find(p => p.name.toLowerCase() === col.name.toLowerCase());\n            if (match) autoMappings.push({\n              left_name: col.name,\n              right_name: match.name,\n              data_type: match.type\n            });\n          });\n        } else {\n          data.properties.forEach(p => {\n            const match = excelColumns.find(c => c.name.toLowerCase() === p.name.toLowerCase());\n            if (match) autoMappings.push({\n              left_name: p.name,\n              right_name: match.name,\n              data_type: p.type\n            });\n          });\n        }\n        setMappings(autoMappings);\n        setStep('mapping');\n      } else setMessage(`Notion özellikleri alınamadı: ${data.error}`);\n    } catch {\n      setMessage('Notion özellikleri alınırken ağ hatası oluştu.');\n    }\n  };\n  const handleMappingChange = (left, right) => {\n    setMappings(prev => prev.map(m => m.left_name === left ? {\n      ...m,\n      right_name: right\n    } : m));\n  };\n  const saveMappingAndStartSync = async () => {\n    if (!userId) {\n      setMessage('Kullanıcı kimliği bulunamadı.');\n      return;\n    }\n    try {\n      const res = await fetch(`${API_BASE_URL}/sync/${syncDirection}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          excel_file_id: selectedExcelId,\n          notion_database_id: notionDbId,\n          user_id: parseInt(userId, 10),\n          mappings: mappings.filter(m => m.right_name) // sadece eşleşenleri gönder\n        })\n      });\n      if (res.ok) setStep('complete');else {\n        const err = await res.json();\n        setMessage(`Senkronizasyon başarısız: ${err.error || err.detail}`);\n      }\n    } catch {\n      setMessage('Senkronizasyon sırasında ağ hatası oluştu.');\n    }\n  };\n\n  // --- Render Steps ---\n  const renderConnectStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"primary-btn\",\n      onClick: handleMicrosoftConnect,\n      children: \"Microsoft Hesab\\u0131n\\u0131 Ba\\u011Fla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n  const renderSelectStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Excel Dosyas\\u0131 Se\\xE7in:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedExcelId,\n        onChange: e => {\n          setSelectedExcelId(e.target.value);\n          fetchExcelColumns(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Dosya Se\\xE7iniz...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), excelFiles.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: f.id,\n          children: f.name\n        }, f.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 32\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Notion Veritaban\\u0131 ID'si:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: notionDbId,\n        onChange: e => setNotionDbId(e.target.value),\n        placeholder: \"Veritaban\\u0131 ID'sini yap\\u0131\\u015Ft\\u0131r\\u0131n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"primary-btn\",\n      onClick: fetchNotionProperties,\n      disabled: !selectedExcelId || !notionDbId,\n      children: \"Notion \\xD6zelliklerini Getir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n  const renderMappingStep = () => {\n    const leftItems = syncDirection === 'excel-to-notion' ? excelColumns : notionProperties;\n    const rightItems = syncDirection === 'excel-to-notion' ? notionProperties : excelColumns;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-sync\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: syncDirection === 'excel-to-notion' ? 'active' : '',\n          onClick: () => setSyncDirection('excel-to-notion'),\n          children: \"Excel \\u2192 Notion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: syncDirection === 'notion-to-excel' ? 'active' : '',\n          onClick: () => setSyncDirection('notion-to-excel'),\n          children: \"Notion \\u2192 Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"S\\xFCtunlar\\u0131 E\\u015Fle\\u015Ftirin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapping-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mapping-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: syncDirection === 'excel-to-notion' ? 'Excel Sütunları' : 'Notion Özellikleri'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), leftItems.map(l => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"excel-col\",\n            children: l.name\n          }, l.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 39\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mapping-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: syncDirection === 'excel-to-notion' ? 'Notion Özellikleri' : 'Excel Sütunları'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), leftItems.map(l => {\n            const mapped = mappings.find(m => m.left_name === l.name);\n            return /*#__PURE__*/_jsxDEV(\"select\", {\n              value: (mapped === null || mapped === void 0 ? void 0 : mapped.right_name) || '',\n              onChange: e => handleMappingChange(l.name, e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Se\\xE7iniz...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this), rightItems.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: r.name,\n                children: r.name\n              }, r.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 44\n              }, this))]\n            }, l.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary-btn\",\n        onClick: saveMappingAndStartSync,\n        children: \"Senkronize Et\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  };\n  const renderCompleteStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Senkr. Tamamland\\u0131!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"primary-btn\",\n      onClick: () => setStep('select'),\n      children: \"Yeni Senkronizasyon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Excel \\u2194 Notion Senkronizasyonu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 66\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [step === 'connect' && renderConnectStep(), step === 'select' && renderSelectStep(), step === 'mapping' && renderMappingStep(), step === 'complete' && renderCompleteStep()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GlOJVsCS3jE38GhV6Asw9kPocBg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","step","setStep","excelFiles","setExcelFiles","excelColumns","setExcelColumns","notionProperties","setNotionProperties","selectedExcelId","setSelectedExcelId","notionDbId","setNotionDbId","message","setMessage","userId","setUserId","mappings","setMappings","syncDirection","setSyncDirection","params","URLSearchParams","window","location","search","authSuccess","get","receivedUserId","storedUserId","localStorage","getItem","setItem","fetchExcelFiles","history","replaceState","document","title","pathname","handleMicrosoftConnect","href","uid","res","fetch","data","json","ok","files","error","fetchExcelColumns","fileId","columns","map","name","fetchNotionProperties","properties","autoMappings","forEach","col","match","find","p","toLowerCase","push","left_name","right_name","data_type","type","c","handleMappingChange","left","right","prev","m","saveMappingAndStartSync","method","headers","body","JSON","stringify","excel_file_id","notion_database_id","user_id","parseInt","filter","err","detail","renderConnectStep","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","renderSelectStep","value","onChange","e","target","f","id","placeholder","disabled","renderMappingStep","leftItems","rightItems","l","mapped","r","renderCompleteStep","_c","$RefreshReg$"],"sources":["C:/Users/Taha/Desktop/notion-excel-sync/excel-notion-ui/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\ntype AppStep = 'connect' | 'select' | 'mapping' | 'complete';\ntype ExcelFile = { id: string; name: string };\ntype ExcelColumn = { name: string };\ntype NotionProperty = { name: string; type: string };\ntype Mapping = { left_name: string; right_name: string; data_type?: string };\n\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\nfunction App() {\n  const [step, setStep] = useState<AppStep>('connect');\n  const [excelFiles, setExcelFiles] = useState<ExcelFile[]>([]);\n  const [excelColumns, setExcelColumns] = useState<ExcelColumn[]>([]);\n  const [notionProperties, setNotionProperties] = useState<NotionProperty[]>([]);\n  const [selectedExcelId, setSelectedExcelId] = useState('');\n  const [notionDbId, setNotionDbId] = useState('');\n  const [message, setMessage] = useState('');\n  const [userId, setUserId] = useState<string | null>(null);\n  const [mappings, setMappings] = useState<Mapping[]>([]);\n  const [syncDirection, setSyncDirection] = useState<'excel-to-notion'|'notion-to-excel'>('excel-to-notion');\n\n  // --- Microsoft Login & Fetch Excel Files ---\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const authSuccess = params.get('auth_success');\n    const receivedUserId = params.get('user_id');\n    const storedUserId = localStorage.getItem('user_id');\n\n    if (authSuccess === 'true' && receivedUserId) {\n      setUserId(receivedUserId);\n      setStep('select');\n      localStorage.setItem('user_id', receivedUserId);\n      fetchExcelFiles(receivedUserId);\n      window.history.replaceState({}, document.title, window.location.pathname);\n    } else if (storedUserId) {\n      setUserId(storedUserId);\n      setStep('select');\n      fetchExcelFiles(storedUserId);\n    } else setStep('connect');\n  }, []);\n\n  const handleMicrosoftConnect = () => {\n    window.location.href = `${API_BASE_URL}/connect/microsoft`;\n  };\n\n  const fetchExcelFiles = async (uid: string) => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/get-excel-files?user_id=${uid}`);\n      const data = await res.json();\n      if (res.ok) setExcelFiles(data.files);\n      else setMessage(`Excel dosyaları alınamadı: ${data.error}`);\n    } catch {\n      setMessage('Excel dosyaları alınırken ağ hatası oluştu.');\n    }\n  };\n\n  const fetchExcelColumns = async (fileId: string) => {\n    if (!userId) return;\n    try {\n      const res = await fetch(`${API_BASE_URL}/get-excel-columns?excel_file_id=${fileId}&user_id=${userId}`);\n      const data = await res.json();\n      if (res.ok) {\n        const columns = data.columns.map((name: string) => ({ name }));\n        setExcelColumns(columns);\n      } else setMessage(`Excel sütunları alınamadı: ${data.error}`);\n    } catch {\n      setMessage('Excel sütunları alınırken ağ hatası oluştu.');\n    }\n  };\n\n  const fetchNotionProperties = async () => {\n    if (!notionDbId) { setMessage('Lütfen Notion Veritabanı ID\\'si girin.'); return; }\n    try {\n      const res = await fetch(`${API_BASE_URL}/get-notion-properties?notion_database_id=${notionDbId}`);\n      const data = await res.json();\n      if (res.ok) {\n        setNotionProperties(data.properties);\n\n        // --- Otomatik eşleşme: isim uyumlu olanlar\n        const autoMappings: Mapping[] = [];\n        if (syncDirection === 'excel-to-notion') {\n          excelColumns.forEach(col => {\n            const match = data.properties.find((p: NotionProperty) => p.name.toLowerCase() === col.name.toLowerCase());\n            if (match) autoMappings.push({ left_name: col.name, right_name: match.name, data_type: match.type });\n          });\n        } else {\n          data.properties.forEach((p: NotionProperty) => {\n            const match = excelColumns.find(c => c.name.toLowerCase() === p.name.toLowerCase());\n            if (match) autoMappings.push({ left_name: p.name, right_name: match.name, data_type: p.type });\n          });\n        }\n        setMappings(autoMappings);\n        setStep('mapping');\n      } else setMessage(`Notion özellikleri alınamadı: ${data.error}`);\n    } catch {\n      setMessage('Notion özellikleri alınırken ağ hatası oluştu.');\n    }\n  };\n\n  const handleMappingChange = (left: string, right: string) => {\n    setMappings(prev => prev.map(m => m.left_name === left ? { ...m, right_name: right } : m));\n  };\n\n  const saveMappingAndStartSync = async () => {\n    if (!userId) { setMessage('Kullanıcı kimliği bulunamadı.'); return; }\n    try {\n      const res = await fetch(`${API_BASE_URL}/sync/${syncDirection}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          excel_file_id: selectedExcelId,\n          notion_database_id: notionDbId,\n          user_id: parseInt(userId, 10),\n          mappings: mappings.filter(m => m.right_name), // sadece eşleşenleri gönder\n        }),\n      });\n      if (res.ok) setStep('complete');\n      else { const err = await res.json(); setMessage(`Senkronizasyon başarısız: ${err.error || err.detail}`); }\n    } catch {\n      setMessage('Senkronizasyon sırasında ağ hatası oluştu.');\n    }\n  };\n\n  // --- Render Steps ---\n  const renderConnectStep = () => (\n    <div className=\"step-container\">\n      <button className=\"primary-btn\" onClick={handleMicrosoftConnect}>Microsoft Hesabını Bağla</button>\n    </div>\n  );\n\n  const renderSelectStep = () => (\n    <div className=\"step-container grid\">\n      <div className=\"field\">\n        <label>Excel Dosyası Seçin:</label>\n        <select value={selectedExcelId} onChange={e => { setSelectedExcelId(e.target.value); fetchExcelColumns(e.target.value); }}>\n          <option value=\"\">Dosya Seçiniz...</option>\n          {excelFiles.map(f => <option key={f.id} value={f.id}>{f.name}</option>)}\n        </select>\n      </div>\n      <div className=\"field\">\n        <label>Notion Veritabanı ID'si:</label>\n        <input type=\"text\" value={notionDbId} onChange={e => setNotionDbId(e.target.value)} placeholder=\"Veritabanı ID'sini yapıştırın\" />\n      </div>\n      <button className=\"primary-btn\" onClick={fetchNotionProperties} disabled={!selectedExcelId || !notionDbId}>Notion Özelliklerini Getir</button>\n    </div>\n  );\n\n  const renderMappingStep = () => {\n    const leftItems = syncDirection === 'excel-to-notion' ? excelColumns : notionProperties;\n    const rightItems = syncDirection === 'excel-to-notion' ? notionProperties : excelColumns;\n\n    return (\n      <div className=\"step-container\">\n        <div className=\"toggle-sync\">\n          <button className={syncDirection==='excel-to-notion'?'active':''} onClick={()=>setSyncDirection('excel-to-notion')}>Excel → Notion</button>\n          <button className={syncDirection==='notion-to-excel'?'active':''} onClick={()=>setSyncDirection('notion-to-excel')}>Notion → Excel</button>\n        </div>\n        <h2>Sütunları Eşleştirin</h2>\n        <div className=\"mapping-grid\">\n          <div className=\"mapping-column\">\n            <h3>{syncDirection==='excel-to-notion'?'Excel Sütunları':'Notion Özellikleri'}</h3>\n            {leftItems.map((l:any) => <div key={l.name} className=\"excel-col\">{l.name}</div>)}\n          </div>\n          <div className=\"mapping-column\">\n            <h3>{syncDirection==='excel-to-notion'?'Notion Özellikleri':'Excel Sütunları'}</h3>\n            {leftItems.map((l:any) => {\n              const mapped = mappings.find(m => m.left_name === l.name);\n              return (\n                <select key={l.name} value={mapped?.right_name || ''} onChange={e=>handleMappingChange(l.name, e.target.value)}>\n                  <option value=\"\">Seçiniz...</option>\n                  {rightItems.map((r:any)=><option key={r.name} value={r.name}>{r.name}</option>)}\n                </select>\n              );\n            })}\n          </div>\n        </div>\n        <button className=\"primary-btn\" onClick={saveMappingAndStartSync}>Senkronize Et</button>\n      </div>\n    );\n  };\n\n  const renderCompleteStep = () => (\n    <div className=\"step-container\">\n      <h2>Senkr. Tamamlandı!</h2>\n      <button className=\"primary-btn\" onClick={()=>setStep('select')}>Yeni Senkronizasyon</button>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n      <header><h1>Excel ↔ Notion Senkronizasyonu</h1>{message && <div className=\"message\">{message}</div>}</header>\n      <main>\n        {step==='connect' && renderConnectStep()}\n        {step==='select' && renderSelectStep()}\n        {step==='mapping' && renderMappingStep()}\n        {step==='complete' && renderCompleteStep()}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taha\\\\Desktop\\\\notion-excel-sync\\\\excel-notion-ui\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// API'ye yapılacak çağrıların temel URL'si\nconst API_BASE_URL = 'http://127.0.0.1:8000';\nfunction App() {\n  _s();\n  const [step, setStep] = useState('connect');\n  const [excelFiles, setExcelFiles] = useState([]);\n  const [excelColumns, setExcelColumns] = useState([]);\n  const [notionProperties, setNotionProperties] = useState([]);\n  const [selectedExcelId, setSelectedExcelId] = useState('');\n  const [notionDbId, setNotionDbId] = useState('');\n  const [message, setMessage] = useState('');\n  const [mappings, setMappings] = useState([]); // Eşleşmeleri tutacak yeni state\n\n  // Microsoft yetkilendirmesi ve dosya listelemeyi birleştir\n  const handleMicrosoftConnect = () => {\n    window.location.href = `${API_BASE_URL}/connect/microsoft`;\n  };\n  const handleNotionConnect = () => {\n    setMessage('Notion hesabınızı bağlamak için, Notion\\'da herhangi bir veritabanı veya sayfasına gidin, \"...\" menüsünden \"Add connections\"ı seçin ve oluşturduğunuz entegrasyonu (\"Excel Sync\") ekleyin.');\n  };\n  const fetchExcelFiles = async () => {\n    setMessage('Excel dosyaları yükleniyor...');\n    const userId = localStorage.getItem('user_id');\n    if (!userId) {\n      setMessage('Hata: Kullanıcı ID bulunamadı.');\n      setStep('connect');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/get-excel-files?user_id=${userId}`);\n      if (!response.ok) {\n        throw new Error('Dosyalar alınamadı. Hesabınızın bağlı olduğundan emin olun.');\n      }\n      const data = await response.json();\n      setExcelFiles(data.files);\n      setStep('select');\n      setMessage('');\n    } catch (error) {\n      if (error instanceof Error) {\n        setMessage(`Hata: ${error.message}`);\n      } else {\n        setMessage('Bilinmeyen bir hata oluştu.');\n      }\n    }\n  };\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const authSuccess = params.get('auth_success');\n    const userId = params.get('user_id');\n    if (authSuccess === 'true' && userId) {\n      localStorage.setItem('user_id', userId);\n      fetchExcelFiles();\n      window.history.replaceState({}, document.title, window.location.pathname);\n    }\n  }, []);\n  const handleGoToMapping = async () => {\n    if (selectedExcelId && notionDbId) {\n      setMessage('Eşleme verileri çekiliyor...');\n      const userId = localStorage.getItem('user_id');\n      if (!userId) {\n        setMessage('Hata: Kullanıcı ID bulunamadı.');\n        return;\n      }\n      try {\n        const [excelRes, notionRes] = await Promise.all([fetch(`${API_BASE_URL}/get-excel-columns?user_id=${userId}&excel_file_id=${selectedExcelId}`), fetch(`${API_BASE_URL}/get-notion-properties?user_id=${userId}&notion_database_id=${notionDbId}`)]);\n        if (!excelRes.ok || !notionRes.ok) {\n          throw new Error('Eşleme verileri alınamadı.');\n        }\n        const excelData = await excelRes.json();\n        const notionData = await notionRes.json();\n\n        // Aynı ada sahip sütunları otomatik olarak eşleştir\n        const initialMappings = excelData.columns.map(col => {\n          const matchingNotionProp = notionData.properties.find(prop => prop.name === col.name);\n          return {\n            excel_column: col.name,\n            notion_property: matchingNotionProp ? matchingNotionProp.name : '',\n            data_type: matchingNotionProp ? matchingNotionProp.type : ''\n          };\n        });\n        setExcelColumns(excelData.columns);\n        setNotionProperties(notionData.properties);\n        setMappings(initialMappings);\n        setStep('mapping');\n        setMessage('');\n      } catch (error) {\n        if (error instanceof Error) {\n          setMessage(`Hata: ${error.message}`);\n        } else {\n          setMessage('Bilinmeyen bir hata oluştu.');\n        }\n      }\n    } else {\n      setMessage('Lütfen bir Excel dosyası ve Notion veritabanı kimliği seçin.');\n    }\n  };\n\n  // Eşleme değişikliğini güncelleyen fonksiyon\n  const handleMappingChange = (excelColName, notionPropName) => {\n    setMappings(prevMappings => {\n      const notionProp = notionProperties.find(p => p.name === notionPropName);\n      return prevMappings.map(mapping => mapping.excel_column === excelColName ? {\n        ...mapping,\n        notion_property: notionPropName,\n        data_type: notionProp ? notionProp.type : ''\n      } : mapping);\n    });\n  };\n\n  // Eşlemeyi kaydeden ve senkronizasyonu başlatan fonksiyon\n  const saveMappingAndStartSync = async () => {\n    setMessage('Eşleme kaydediliyor...');\n    const userId = localStorage.getItem('user_id');\n    if (!userId) {\n      setMessage('Hata: Kullanıcı ID bulunamadı.');\n      return;\n    }\n\n    // Seçilmemiş eşlemeleri filtrele\n    const validMappings = mappings.filter(m => m.notion_property !== '');\n    try {\n      // Eşlemeleri kaydet\n      const saveResponse = await fetch(`${API_BASE_URL}/save-mapping?user_id=${userId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(validMappings)\n      });\n      if (!saveResponse.ok) {\n        throw new Error('Eşleme kaydedilemedi.');\n      }\n      setMessage('Eşleme başarıyla kaydedildi. Senkronizasyon başlatılıyor...');\n\n      // Senkronizasyonu başlat\n      const syncResponse = await fetch(`${API_BASE_URL}/sync?excel_file_id=${selectedExcelId}&notion_database_id=${notionDbId}&user_id=${userId}`, {\n        method: 'POST'\n      });\n      if (!syncResponse.ok) {\n        throw new Error('Senkronizasyon başlatılamadı.');\n      }\n      setMessage('Senkronizasyon başarıyla tamamlandı!');\n      setStep('complete');\n    } catch (error) {\n      if (error instanceof Error) {\n        setMessage(`Hata: ${error.message}`);\n      } else {\n        setMessage('Bilinmeyen bir hata oluştu.');\n      }\n    }\n  };\n  const renderConnectStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ba\\u015Flamak i\\xE7in hesaplar\\u0131n\\u0131z\\u0131 ba\\u011Flay\\u0131n.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMicrosoftConnect,\n      children: \"Microsoft Hesab\\u0131n\\u0131 Ba\\u011Fla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNotionConnect,\n      children: \"Notion Hesab\\u0131n\\u0131 Ba\\u011Fla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Microsoft ba\\u011Flant\\u0131s\\u0131n\\u0131 tamamlad\\u0131ktan sonra, dosyalar\\u0131n\\u0131z otomatik olarak y\\xFCklenecektir.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n  const renderSelectStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Excel Dosyan\\u0131z\\u0131 ve Notion Veritaban\\u0131n\\u0131z\\u0131 Se\\xE7in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-selection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-files\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Excel Dosyalar\\u0131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), excelFiles.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: excelFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"excelFile\",\n                value: file.id,\n                checked: selectedExcelId === file.id,\n                onChange: e => setSelectedExcelId(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this), file.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this)\n          }, file.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Excel dosyas\\u0131 bulunamad\\u0131. L\\xFCtfen OneDrive hesab\\u0131n\\u0131zda .xlsx dosyas\\u0131 oldu\\u011Fundan emin olun.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notion-db\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notion Veritaban\\u0131 ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Notion veritaban\\u0131 ID'sini URL'den kopyalay\\u0131p yap\\u0131\\u015Ft\\u0131r\\u0131n.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Notion Veritaban\\u0131 ID'sini girin...\",\n          value: notionDbId,\n          onChange: e => setNotionDbId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoToMapping,\n      children: \"E\\u015Flemeye Ge\\xE7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n  const renderMappingStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"S\\xFCtunlar\\u0131 E\\u015Fle\\u015Ftirin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapping-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Excel S\\xFCtunlar\\u0131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: excelColumns.map(col => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: col.name\n          }, col.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notion-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notion \\xD6zellikleri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: mappings.map(mapping => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"excel-col-name\",\n                children: mapping.excel_column\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: mapping.notion_property,\n                onChange: e => handleMappingChange(mapping.excel_column, e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Se\\xE7iniz...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 21\n                }, this), notionProperties.map(prop => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: prop.name,\n                  children: [prop.name, \" (\", prop.type, \")\"]\n                }, prop.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)\n          }, mapping.excel_column, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveMappingAndStartSync,\n      children: \"E\\u015Flemeyi Kaydet ve Senkronizasyonu Ba\\u015Flat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n  const renderCompleteStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Senkronizasyon Ba\\u015Far\\u0131l\\u0131!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Verileriniz \\u015Fimdi Excel ve Notion aras\\u0131nda senkronize ediliyor. Kodunuzdaki periyodik g\\xF6revler bu senkronizasyonu s\\xFCrd\\xFCrecektir.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setStep('connect'),\n      children: \"Yeni Senkronizasyon Olu\\u015Ftur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notion & Excel Senkronizasyonu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }, this), step === 'connect' && renderConnectStep(), step === 'select' && renderSelectStep(), step === 'mapping' && renderMappingStep(), step === 'complete' && renderCompleteStep()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"M7WpDbTDeAB22GI/S+fYSLwfLxQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","step","setStep","excelFiles","setExcelFiles","excelColumns","setExcelColumns","notionProperties","setNotionProperties","selectedExcelId","setSelectedExcelId","notionDbId","setNotionDbId","message","setMessage","mappings","setMappings","handleMicrosoftConnect","window","location","href","handleNotionConnect","fetchExcelFiles","userId","localStorage","getItem","response","fetch","ok","Error","data","json","files","error","params","URLSearchParams","search","authSuccess","get","setItem","history","replaceState","document","title","pathname","handleGoToMapping","excelRes","notionRes","Promise","all","excelData","notionData","initialMappings","columns","map","col","matchingNotionProp","properties","find","prop","name","excel_column","notion_property","data_type","type","handleMappingChange","excelColName","notionPropName","prevMappings","notionProp","p","mapping","saveMappingAndStartSync","validMappings","filter","m","saveResponse","method","headers","body","JSON","stringify","syncResponse","renderConnectStep","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderSelectStep","className","length","file","value","id","checked","onChange","e","target","placeholder","renderMappingStep","renderCompleteStep","_c","$RefreshReg$"],"sources":["C:/Users/Taha/Desktop/notion-excel-sync/excel-notion-ui/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\ntype AppStep = 'connect' | 'select' | 'mapping' | 'complete';\n\n// API'ye yapılacak çağrıların temel URL'si\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\nfunction App() {\n  const [step, setStep] = useState<AppStep>('connect');\n  const [excelFiles, setExcelFiles] = useState<{ id: string; name: string }[]>([]);\n  const [excelColumns, setExcelColumns] = useState<{ name: string; }[]>([]);\n  const [notionProperties, setNotionProperties] = useState<{ name: string; type: string }[]>([]);\n  const [selectedExcelId, setSelectedExcelId] = useState<string>('');\n  const [notionDbId, setNotionDbId] = useState<string>('');\n  const [message, setMessage] = useState<string>('');\n  const [mappings, setMappings] = useState<any[]>([]); // Eşleşmeleri tutacak yeni state\n\n  // Microsoft yetkilendirmesi ve dosya listelemeyi birleştir\n  const handleMicrosoftConnect = () => {\n    window.location.href = `${API_BASE_URL}/connect/microsoft`;\n  };\n\n  const handleNotionConnect = () => {\n    setMessage('Notion hesabınızı bağlamak için, Notion\\'da herhangi bir veritabanı veya sayfasına gidin, \"...\" menüsünden \"Add connections\"ı seçin ve oluşturduğunuz entegrasyonu (\"Excel Sync\") ekleyin.');\n  };\n  \n  const fetchExcelFiles = async () => {\n    setMessage('Excel dosyaları yükleniyor...');\n    const userId = localStorage.getItem('user_id');\n    if (!userId) {\n      setMessage('Hata: Kullanıcı ID bulunamadı.');\n      setStep('connect');\n      return;\n    }\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/get-excel-files?user_id=${userId}`);\n      if (!response.ok) {\n        throw new Error('Dosyalar alınamadı. Hesabınızın bağlı olduğundan emin olun.');\n      }\n      const data = await response.json();\n      setExcelFiles(data.files);\n      setStep('select');\n      setMessage('');\n    } catch (error) {\n      if (error instanceof Error) {\n        setMessage(`Hata: ${error.message}`);\n      } else {\n        setMessage('Bilinmeyen bir hata oluştu.');\n      }\n    }\n  };\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const authSuccess = params.get('auth_success');\n    const userId = params.get('user_id');\n\n    if (authSuccess === 'true' && userId) {\n      localStorage.setItem('user_id', userId);\n      fetchExcelFiles();\n      window.history.replaceState({}, document.title, window.location.pathname);\n    }\n  }, []);\n\n  const handleGoToMapping = async () => {\n    if (selectedExcelId && notionDbId) {\n      setMessage('Eşleme verileri çekiliyor...');\n      const userId = localStorage.getItem('user_id');\n      if (!userId) {\n        setMessage('Hata: Kullanıcı ID bulunamadı.');\n        return;\n      }\n\n      try {\n        const [excelRes, notionRes] = await Promise.all([\n          fetch(`${API_BASE_URL}/get-excel-columns?user_id=${userId}&excel_file_id=${selectedExcelId}`),\n          fetch(`${API_BASE_URL}/get-notion-properties?user_id=${userId}&notion_database_id=${notionDbId}`)\n        ]);\n\n        if (!excelRes.ok || !notionRes.ok) {\n          throw new Error('Eşleme verileri alınamadı.');\n        }\n\n        const excelData = await excelRes.json();\n        const notionData = await notionRes.json();\n\n        // Aynı ada sahip sütunları otomatik olarak eşleştir\n        const initialMappings = excelData.columns.map((col: { name: string }) => {\n          const matchingNotionProp = notionData.properties.find((prop: { name: string }) => prop.name === col.name);\n          return {\n            excel_column: col.name,\n            notion_property: matchingNotionProp ? matchingNotionProp.name : '',\n            data_type: matchingNotionProp ? matchingNotionProp.type : ''\n          };\n        });\n\n        setExcelColumns(excelData.columns);\n        setNotionProperties(notionData.properties);\n        setMappings(initialMappings);\n        setStep('mapping');\n        setMessage('');\n      } catch (error) {\n        if (error instanceof Error) {\n          setMessage(`Hata: ${error.message}`);\n        } else {\n          setMessage('Bilinmeyen bir hata oluştu.');\n        }\n      }\n    } else {\n      setMessage('Lütfen bir Excel dosyası ve Notion veritabanı kimliği seçin.');\n    }\n  };\n  \n  // Eşleme değişikliğini güncelleyen fonksiyon\n  const handleMappingChange = (excelColName: string, notionPropName: string) => {\n    setMappings(prevMappings => {\n      const notionProp = notionProperties.find(p => p.name === notionPropName);\n      return prevMappings.map(mapping =>\n        mapping.excel_column === excelColName\n          ? { ...mapping, notion_property: notionPropName, data_type: notionProp ? notionProp.type : '' }\n          : mapping\n      );\n    });\n  };\n\n  // Eşlemeyi kaydeden ve senkronizasyonu başlatan fonksiyon\n  const saveMappingAndStartSync = async () => {\n    setMessage('Eşleme kaydediliyor...');\n    const userId = localStorage.getItem('user_id');\n    if (!userId) {\n      setMessage('Hata: Kullanıcı ID bulunamadı.');\n      return;\n    }\n\n    // Seçilmemiş eşlemeleri filtrele\n    const validMappings = mappings.filter(m => m.notion_property !== '');\n\n    try {\n      // Eşlemeleri kaydet\n      const saveResponse = await fetch(`${API_BASE_URL}/save-mapping?user_id=${userId}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(validMappings),\n      });\n\n      if (!saveResponse.ok) {\n        throw new Error('Eşleme kaydedilemedi.');\n      }\n      setMessage('Eşleme başarıyla kaydedildi. Senkronizasyon başlatılıyor...');\n\n      // Senkronizasyonu başlat\n      const syncResponse = await fetch(`${API_BASE_URL}/sync?excel_file_id=${selectedExcelId}&notion_database_id=${notionDbId}&user_id=${userId}`, {\n        method: 'POST',\n      });\n\n      if (!syncResponse.ok) {\n        throw new Error('Senkronizasyon başlatılamadı.');\n      }\n\n      setMessage('Senkronizasyon başarıyla tamamlandı!');\n      setStep('complete');\n    } catch (error) {\n      if (error instanceof Error) {\n        setMessage(`Hata: ${error.message}`);\n      } else {\n        setMessage('Bilinmeyen bir hata oluştu.');\n      }\n    }\n  };\n  \n  const renderConnectStep = () => (\n    <div>\n      <p>Başlamak için hesaplarınızı bağlayın.</p>\n      <button onClick={handleMicrosoftConnect}>Microsoft Hesabını Bağla</button>\n      <button onClick={handleNotionConnect}>Notion Hesabını Bağla</button>\n      <p>Microsoft bağlantısını tamamladıktan sonra, dosyalarınız otomatik olarak yüklenecektir.</p>\n    </div>\n  );\n\n  const renderSelectStep = () => (\n    <div>\n      <h2>Excel Dosyanızı ve Notion Veritabanınızı Seçin</h2>\n      \n      <div className=\"file-selection-container\">\n        <div className=\"excel-files\">\n          <h3>Excel Dosyaları</h3>\n          {excelFiles.length > 0 ? (\n            <ul>\n              {excelFiles.map((file) => (\n                <li key={file.id}>\n                  <label>\n                    <input\n                      type=\"radio\"\n                      name=\"excelFile\"\n                      value={file.id}\n                      checked={selectedExcelId === file.id}\n                      onChange={(e) => setSelectedExcelId(e.target.value)}\n                    />\n                    {file.name}\n                  </label>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>Excel dosyası bulunamadı. Lütfen OneDrive hesabınızda .xlsx dosyası olduğundan emin olun.</p>\n          )}\n        </div>\n\n        <div className=\"notion-db\">\n          <h3>Notion Veritabanı ID</h3>\n          <p>Notion veritabanı ID'sini URL'den kopyalayıp yapıştırın.</p>\n          <input\n            type=\"text\"\n            placeholder=\"Notion Veritabanı ID'sini girin...\"\n            value={notionDbId}\n            onChange={(e) => setNotionDbId(e.target.value)}\n          />\n        </div>\n      </div>\n      \n      <button onClick={handleGoToMapping}>Eşlemeye Geç</button>\n    </div>\n  );\n\n  const renderMappingStep = () => (\n    <div>\n      <h2>Sütunları Eşleştirin</h2>\n      <div className=\"mapping-container\">\n        <div className=\"excel-side\">\n          <h3>Excel Sütunları</h3>\n          <ul>\n            {excelColumns.map((col) => (\n              <li key={col.name}>{col.name}</li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"notion-side\">\n          <h3>Notion Özellikleri</h3>\n          <ul>\n            {mappings.map(mapping => (\n              <li key={mapping.excel_column}>\n                <label>\n                  <span className=\"excel-col-name\">{mapping.excel_column}</span>\n                  <select\n                    value={mapping.notion_property}\n                    onChange={(e) => handleMappingChange(mapping.excel_column, e.target.value)}\n                  >\n                    <option value=\"\">Seçiniz...</option>\n                    {notionProperties.map(prop => (\n                      <option key={prop.name} value={prop.name}>{prop.name} ({prop.type})</option>\n                    ))}\n                  </select>\n                </label>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <button onClick={saveMappingAndStartSync}>Eşlemeyi Kaydet ve Senkronizasyonu Başlat</button>\n    </div>\n  );\n  \n  const renderCompleteStep = () => (\n    <div>\n      <h2>Senkronizasyon Başarılı!</h2>\n      <p>Verileriniz şimdi Excel ve Notion arasında senkronize ediliyor. Kodunuzdaki periyodik görevler bu senkronizasyonu sürdürecektir.</p>\n      <button onClick={() => setStep('connect')}>Yeni Senkronizasyon Oluştur</button>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Notion & Excel Senkronizasyonu</h1>\n        \n        {message && <p className=\"message\">{message}</p>}\n\n        {step === 'connect' && renderConnectStep()}\n        {step === 'select' && renderSelectStep()}\n        {step === 'mapping' && renderMappingStep()}\n        {step === 'complete' && renderCompleteStep()}\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
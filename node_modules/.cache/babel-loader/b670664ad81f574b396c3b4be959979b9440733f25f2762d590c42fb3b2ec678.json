{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taha\\\\Desktop\\\\notion-excel-sync\\\\excel-notion-ui\\\\src\\\\Profile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport './Profile.css'; // Yeni stil dosyası oluşturmayı unutmayın!\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\n// API'den gelen verinin yapısı (UserSubscriptionStatus Pydantic modeline karşılık gelir)\n\n// Config.py'deki limitleri göstermek için basit bir map\nconst LIMITS = {\n  free: {\n    syncs: 2,\n    interval: 10\n  },\n  basic: {\n    syncs: 5,\n    interval: 15\n  },\n  pro: {\n    syncs: 20,\n    interval: 5\n  }\n};\nconst Profile = () => {\n  _s();\n  const userId = localStorage.getItem('user_id');\n  const [status, setStatus] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isCancelling, setIsCancelling] = useState(false);\n\n  // API çağrısı için helper\n  const fetchSubscriptionStatus = async () => {\n    if (!userId) {\n      setMessage(\"Hata: Kullanıcı oturumu bulunamadı.\");\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/subscription/status/${userId}`);\n      if (!response.ok) {\n        throw new Error(\"Abonelik durumu alınamadı.\");\n      }\n      const data = await response.json();\n      setStatus(data);\n    } catch (error) {\n      console.error(error);\n      setMessage(\"Abonelik durumu yüklenirken bir sorun oluştu.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // İlk yüklemede durumu çek\n  useEffect(() => {\n    fetchSubscriptionStatus();\n  }, []);\n\n  // Abonelik İptal İşlemi\n  const handleCancelSubscription = async () => {\n    if (!userId || isCancelling) return;\n    if (!window.confirm(\"Aboneliğinizi iptal etmek istediğinizden emin misiniz? Ödenen süre boyunca hizmete devam edebilirsiniz.\")) {\n      return;\n    }\n    setIsCancelling(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/subscription/cancel/${userId}`, {\n        method: 'POST'\n      });\n      if (!response.ok) {\n        throw new Error(\"İptal işlemi başarısız oldu.\");\n      }\n\n      // Başarılı olursa, durumu yenile ve kullanıcıya mesaj ver\n      await fetchSubscriptionStatus();\n      alert(\"Aboneliğiniz iptal edildi.\");\n    } catch (error) {\n      console.error(\"İptal hatası:\", error);\n      setMessage(\"Abonelik iptal edilirken bir sorun oluştu. Lütfen tekrar deneyin.\");\n    } finally {\n      setIsCancelling(false);\n    }\n  };\n\n  // Abonelik Yükseltme İşlemi (Mock)\n  const handleUpgrade = async newLevel => {\n    if (!userId) return;\n    if (!window.confirm(`Aboneliğinizi '${newLevel}' seviyesine yükseltmek istediğinizden emin misiniz? (Ödeme simülasyonu)`)) {\n      return;\n    }\n    try {\n      // NOTE: Gerçek uygulamada burası ödeme akışına (Stripe/Paddle) yönlendirilir.\n      const response = await fetch(`${API_BASE_URL}/subscription/upgrade/${userId}?new_level=${newLevel}`, {\n        method: 'POST'\n      });\n      if (!response.ok) {\n        throw new Error(\"Yükseltme işlemi başarısız oldu.\");\n      }\n      await fetchSubscriptionStatus();\n      alert(`Aboneliğiniz başarıyla ${newLevel} seviyesine yükseltildi!`);\n    } catch (error) {\n      console.error(\"Yükseltme hatası:\", error);\n      setMessage(\"Yükseltme işlemi sırasında bir sorun oluştu.\");\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container profile-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Abonelik durumu y\\xFCkleniyor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 16\n    }, this);\n  }\n  if (message && !status) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container profile-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 16\n    }, this);\n  }\n  if (!status) return null;\n\n  // Tarih formatlama (Türkçe ay adlarını kullanmak için date-fns kütüphanesi yüklü olmalıdır)\n  const formattedEndDate = status.subscription_end_date ? format(new Date(status.subscription_end_date), 'dd MMMM yyyy') : 'Süresiz';\n  const currentLimits = LIMITS[status.subscription_level] || LIMITS.free;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"profile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [status.email, \" Profili\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Abonelik Y\\xF6netimi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"current-status-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Mevcut Abonelik: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `level-${status.subscription_level}`,\n          children: status.subscription_level.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), status.subscription_end_date ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-message warning\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Aboneli\\u011Finiz iptal edildi. Hizmetiniz \", formattedEndDate, \" tarihine kadar aktif kalacakt\\u0131r. Bu tarihten sonra \\xF6deme yap\\u0131lmazsa otomatik senkronizasyon i\\u015Fleriniz durdurulacakt\\u0131r ve verileriniz 30 g\\xFCn sonra silinecektir.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-message success\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Aboneli\\u011Finiz Aktif.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), status.subscription_level !== 'free' && ` Sonraki ödeme tarihi: Bilgi alınamadı (Simülasyon).`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"limits-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"limit-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Otomatik Senkronizasyon Limiti:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [currentLimits.syncs, \" Konfig\\xFCrasyon\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"limit-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Minimum Senkronizasyon Aral\\u0131\\u011F\\u0131:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Her \", currentLimits.interval, \" Dakika\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-area\",\n        children: status.subscription_level !== 'free' && !status.subscription_end_date && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelSubscription,\n          disabled: isCancelling,\n          className: \"btn btn-danger\",\n          children: isCancelling ? 'İptal Ediliyor...' : 'Aboneliği İptal Et'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"upgrade-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Plan\\u0131 Y\\xFCkselt/De\\u011Fi\\u015Ftir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-cards-container\",\n        children: Object.keys(LIMITS).filter(level => level !== status.subscription_level).map(level => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [level.toUpperCase(), \" Plan\\u0131\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Max Syncs: \", LIMITS[level].syncs]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Min Interval: \", LIMITS[level].interval, \" Dk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpgrade(level),\n            className: \"btn btn-secondary\",\n            children: level === 'free' ? 'Ücretsiz Plana Dön' : 'Yükselt/Geçiş Yap'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this)]\n        }, level, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"D3r5S+HrPHRsiQR+GbDhIvYb2x4=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","format","jsxDEV","_jsxDEV","API_BASE_URL","LIMITS","free","syncs","interval","basic","pro","Profile","_s","userId","localStorage","getItem","status","setStatus","message","setMessage","loading","setLoading","isCancelling","setIsCancelling","fetchSubscriptionStatus","response","fetch","ok","Error","data","json","error","console","handleCancelSubscription","window","confirm","method","alert","handleUpgrade","newLevel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","formattedEndDate","subscription_end_date","Date","currentLimits","subscription_level","email","toUpperCase","onClick","disabled","Object","keys","filter","level","map","_c","$RefreshReg$"],"sources":["C:/Users/Taha/Desktop/notion-excel-sync/excel-notion-ui/src/Profile.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { format } from 'date-fns';\r\nimport './Profile.css'; // Yeni stil dosyası oluşturmayı unutmayın!\r\n\r\nconst API_BASE_URL = 'http://127.0.0.1:8000';\r\n\r\n// API'den gelen verinin yapısı (UserSubscriptionStatus Pydantic modeline karşılık gelir)\r\ninterface SubscriptionStatus {\r\n    email: string;\r\n    subscription_level: string; // 'free', 'basic', 'pro'\r\n    is_subscription_active: boolean; // Ödenen dönem içinde aktif mi?\r\n    subscription_end_date: string | null; // Bitiş tarihi (ISO formatında string)\r\n}\r\n\r\n// Config.py'deki limitleri göstermek için basit bir map\r\nconst LIMITS: { [key: string]: { syncs: number; interval: number } } = {\r\n    free: { syncs: 2, interval: 10 },\r\n    basic: { syncs: 5, interval: 15 },\r\n    pro: { syncs: 20, interval: 5 },\r\n};\r\n\r\nconst Profile: React.FC = () => {\r\n    const userId = localStorage.getItem('user_id');\r\n    const [status, setStatus] = useState<SubscriptionStatus | null>(null);\r\n    const [message, setMessage] = useState<string | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [isCancelling, setIsCancelling] = useState<boolean>(false);\r\n    \r\n    // API çağrısı için helper\r\n    const fetchSubscriptionStatus = async () => {\r\n        if (!userId) {\r\n            setMessage(\"Hata: Kullanıcı oturumu bulunamadı.\");\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/subscription/status/${userId}`);\r\n            if (!response.ok) {\r\n                throw new Error(\"Abonelik durumu alınamadı.\");\r\n            }\r\n            const data: SubscriptionStatus = await response.json();\r\n            setStatus(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n            setMessage(\"Abonelik durumu yüklenirken bir sorun oluştu.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // İlk yüklemede durumu çek\r\n    useEffect(() => {\r\n        fetchSubscriptionStatus();\r\n    }, []);\r\n\r\n    // Abonelik İptal İşlemi\r\n    const handleCancelSubscription = async () => {\r\n        if (!userId || isCancelling) return;\r\n        \r\n        if (!window.confirm(\"Aboneliğinizi iptal etmek istediğinizden emin misiniz? Ödenen süre boyunca hizmete devam edebilirsiniz.\")) {\r\n            return;\r\n        }\r\n\r\n        setIsCancelling(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/subscription/cancel/${userId}`, {\r\n                method: 'POST',\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(\"İptal işlemi başarısız oldu.\");\r\n            }\r\n            \r\n            // Başarılı olursa, durumu yenile ve kullanıcıya mesaj ver\r\n            await fetchSubscriptionStatus(); \r\n            alert(\"Aboneliğiniz iptal edildi.\");\r\n            \r\n        } catch (error) {\r\n            console.error(\"İptal hatası:\", error);\r\n            setMessage(\"Abonelik iptal edilirken bir sorun oluştu. Lütfen tekrar deneyin.\");\r\n        } finally {\r\n            setIsCancelling(false);\r\n        }\r\n    };\r\n    \r\n    // Abonelik Yükseltme İşlemi (Mock)\r\n    const handleUpgrade = async (newLevel: string) => {\r\n        if (!userId) return;\r\n        \r\n        if (!window.confirm(`Aboneliğinizi '${newLevel}' seviyesine yükseltmek istediğinizden emin misiniz? (Ödeme simülasyonu)`)) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // NOTE: Gerçek uygulamada burası ödeme akışına (Stripe/Paddle) yönlendirilir.\r\n            const response = await fetch(`${API_BASE_URL}/subscription/upgrade/${userId}?new_level=${newLevel}`, {\r\n                method: 'POST',\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(\"Yükseltme işlemi başarısız oldu.\");\r\n            }\r\n            \r\n            await fetchSubscriptionStatus();\r\n            alert(`Aboneliğiniz başarıyla ${newLevel} seviyesine yükseltildi!`);\r\n            \r\n        } catch (error) {\r\n            console.error(\"Yükseltme hatası:\", error);\r\n            setMessage(\"Yükseltme işlemi sırasında bir sorun oluştu.\");\r\n        }\r\n    };\r\n\r\n\r\n    if (loading) {\r\n        return <div className=\"container profile-container\"><p>Abonelik durumu yükleniyor...</p></div>;\r\n    }\r\n    \r\n    if (message && !status) {\r\n        return <div className=\"container profile-container\"><p className=\"error-message\">{message}</p></div>;\r\n    }\r\n\r\n    if (!status) return null;\r\n    \r\n    // Tarih formatlama (Türkçe ay adlarını kullanmak için date-fns kütüphanesi yüklü olmalıdır)\r\n    const formattedEndDate = status.subscription_end_date \r\n        ? format(new Date(status.subscription_end_date), 'dd MMMM yyyy') \r\n        : 'Süresiz';\r\n        \r\n    const currentLimits = LIMITS[status.subscription_level] || LIMITS.free;\r\n\r\n    return (\r\n        <div className=\"container profile-container\">\r\n            <header className=\"profile-header\">\r\n                <h1>{status.email} Profili</h1>\r\n                <p>Abonelik Yönetimi</p>\r\n            </header>\r\n\r\n            <section className=\"current-status-card\">\r\n                <h2>Mevcut Abonelik: <span className={`level-${status.subscription_level}`}>{status.subscription_level.toUpperCase()}</span></h2>\r\n                \r\n                {/* 1. ABONELİK BİTİŞ/İPTAL DURUMU */}\r\n                {status.subscription_end_date ? (\r\n                    <div className=\"status-message warning\">\r\n                        <strong>\r\n                            Aboneliğiniz iptal edildi. \r\n                            Hizmetiniz {formattedEndDate} tarihine kadar aktif kalacaktır. \r\n                            Bu tarihten sonra ödeme yapılmazsa otomatik senkronizasyon işleriniz durdurulacaktır ve verileriniz 30 gün sonra silinecektir.\r\n                        </strong>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"status-message success\">\r\n                        <strong>Aboneliğiniz Aktif.</strong> \r\n                        {status.subscription_level !== 'free' && ` Sonraki ödeme tarihi: Bilgi alınamadı (Simülasyon).`}\r\n                    </div>\r\n                )}\r\n                \r\n                {/* 2. ABONELİK LİMİTLERİ */}\r\n                <div className=\"limits-grid\">\r\n                    <div className=\"limit-item\">\r\n                        <strong>Otomatik Senkronizasyon Limiti:</strong>\r\n                        <p>{currentLimits.syncs} Konfigürasyon</p>\r\n                    </div>\r\n                    <div className=\"limit-item\">\r\n                        <strong>Minimum Senkronizasyon Aralığı:</strong>\r\n                        <p>Her {currentLimits.interval} Dakika</p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* 3. İPTAL BUTONU */}\r\n                <div className=\"action-area\">\r\n                    {/* Yalnızca abonelik aktif ise ve bitiş tarihi henüz belirlenmemişse İptal butonunu göster */}\r\n                    {status.subscription_level !== 'free' && !status.subscription_end_date && (\r\n                        <button \r\n                            onClick={handleCancelSubscription} \r\n                            disabled={isCancelling}\r\n                            className=\"btn btn-danger\"\r\n                        >\r\n                            {isCancelling ? 'İptal Ediliyor...' : 'Aboneliği İptal Et'}\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </section>\r\n            \r\n            {/* 4. YÜKSELTME SEÇENEKLERİ */}\r\n            <section className=\"upgrade-options\">\r\n                <h2>Planı Yükselt/Değiştir</h2>\r\n                <div className=\"plan-cards-container\">\r\n                    {Object.keys(LIMITS).filter(level => level !== status.subscription_level).map(level => (\r\n                        <div key={level} className=\"plan-card\">\r\n                            <h3>{level.toUpperCase()} Planı</h3>\r\n                            <p>Max Syncs: {LIMITS[level].syncs}</p>\r\n                            <p>Min Interval: {LIMITS[level].interval} Dk</p>\r\n                            <button \r\n                                onClick={() => handleUpgrade(level)}\r\n                                className=\"btn btn-secondary\"\r\n                            >\r\n                                {level === 'free' ? 'Ücretsiz Plana Dön' : 'Yükselt/Geçiş Yap'}\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </section>\r\n\r\n            {/* Diğer Özellikler (Bağlantı Yönetimi, Loglar vb.) buraya eklenebilir */}\r\n            {message && <p className=\"error-message\">{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
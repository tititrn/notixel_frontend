{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taha\\\\Desktop\\\\notion-excel-sync\\\\excel-notion-ui\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MappingSection from \"./MappingSection\";\n\n// Tip tanımı\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [excelFiles, setExcelFiles] = useState([]);\n  const [selectedExcelFile, setSelectedExcelFile] = useState(\"\");\n  const [excelColumns, setExcelColumns] = useState([]);\n  const [notionDatabaseId, setNotionDatabaseId] = useState(\"\");\n  const [notionProperties, setNotionProperties] = useState([]);\n  const [mappings, setMappings] = useState([]);\n\n  // Excel dosyalarını backend'den al\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/get-excel-files?user_id=1\").then(res => res.json()).then(data => setExcelFiles(data)).catch(err => console.error(\"Excel files fetch error:\", err));\n  }, []);\n\n  // Excel dosyası seçildiğinde sütunları al\n  const fetchExcelColumns = () => {\n    if (!selectedExcelFile) return;\n    fetch(`http://127.0.0.1:8000/get-excel-columns?excel_file_id=${selectedExcelFile}&user_id=1`).then(res => res.json()).then(data => setExcelColumns(data)).catch(err => console.error(\"Excel columns fetch error:\", err));\n  };\n\n  // Notion DB özelliklerini al\n  const fetchNotionProperties = () => {\n    if (!notionDatabaseId) return;\n    fetch(`http://127.0.0.1:8000/get-notion-properties?notion_database_id=${notionDatabaseId}`).then(res => res.json()).then(data => setNotionProperties(data)).catch(err => console.error(\"Notion properties fetch error:\", err));\n  };\n\n  // Excel → Notion senkronizasyonu başlat\n  const handleSync = () => {\n    fetch(\"http://127.0.0.1:8000/sync/excel-to-notion\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        excel_file_id: selectedExcelFile,\n        notion_database_id: notionDatabaseId,\n        mappings: mappings,\n        user_id: 1\n      })\n    }).then(res => res.json()).then(() => alert(\"Sync tamamlandı!\")).catch(err => console.error(\"Sync error:\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Excel \\u2192 Notion Senkronizasyon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"Excel Dosyas\\u0131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedExcelFile,\n        onChange: e => setSelectedExcelFile(e.target.value),\n        className: \"border p-2 rounded-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Se\\xE7iniz...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), excelFiles.map(file => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: file.id,\n          children: file.name\n        }, file.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchExcelColumns,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded-md\",\n        children: \"Excel S\\xFCtunlar\\u0131n\\u0131 Getir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"Notion Database ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: notionDatabaseId,\n        onChange: e => setNotionDatabaseId(e.target.value),\n        className: \"border p-2 rounded-md w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchNotionProperties,\n        className: \"bg-green-500 text-white px-4 py-2 rounded-md\",\n        children: \"Notion \\xD6zelliklerini Getir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MappingSection, {\n      excelColumns: excelColumns,\n      notionProperties: notionProperties,\n      onChange: newMappings => setMappings(newMappings)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSync,\n        className: \"bg-purple-500 text-white px-6 py-2 rounded-md\",\n        children: \"Excel\\u2019den Notion\\u2019a Sync\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Bo9CUhfCjzSWC+xPftUvFOXUht0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MappingSection","jsxDEV","_jsxDEV","App","_s","excelFiles","setExcelFiles","selectedExcelFile","setSelectedExcelFile","excelColumns","setExcelColumns","notionDatabaseId","setNotionDatabaseId","notionProperties","setNotionProperties","mappings","setMappings","fetch","then","res","json","data","catch","err","console","error","fetchExcelColumns","fetchNotionProperties","handleSync","method","headers","body","JSON","stringify","excel_file_id","notion_database_id","user_id","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","file","id","name","onClick","type","newMappings","_c","$RefreshReg$"],"sources":["C:/Users/Taha/Desktop/notion-excel-sync/excel-notion-ui/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MappingSection, { Mapping, NotionProperty } from \"./MappingSection\";\n\n// Tip tanımı\ntype ExcelFile = {\n  id: string;\n  name: string;\n};\n\nfunction App() {\n  const [excelFiles, setExcelFiles] = useState<ExcelFile[]>([]);\n  const [selectedExcelFile, setSelectedExcelFile] = useState<string>(\"\");\n  const [excelColumns, setExcelColumns] = useState<string[]>([]);\n  const [notionDatabaseId, setNotionDatabaseId] = useState<string>(\"\");\n  const [notionProperties, setNotionProperties] = useState<NotionProperty[]>([]);\n  const [mappings, setMappings] = useState<Mapping[]>([]);\n\n  // Excel dosyalarını backend'den al\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/get-excel-files?user_id=1\")\n      .then((res) => res.json())\n      .then((data: ExcelFile[]) => setExcelFiles(data))\n      .catch((err) => console.error(\"Excel files fetch error:\", err));\n  }, []);\n\n  // Excel dosyası seçildiğinde sütunları al\n  const fetchExcelColumns = () => {\n    if (!selectedExcelFile) return;\n    fetch(\n      `http://127.0.0.1:8000/get-excel-columns?excel_file_id=${selectedExcelFile}&user_id=1`\n    )\n      .then((res) => res.json())\n      .then((data: string[]) => setExcelColumns(data))\n      .catch((err) => console.error(\"Excel columns fetch error:\", err));\n  };\n\n  // Notion DB özelliklerini al\n  const fetchNotionProperties = () => {\n    if (!notionDatabaseId) return;\n    fetch(\n      `http://127.0.0.1:8000/get-notion-properties?notion_database_id=${notionDatabaseId}`\n    )\n      .then((res) => res.json())\n      .then((data: NotionProperty[]) => setNotionProperties(data))\n      .catch((err) => console.error(\"Notion properties fetch error:\", err));\n  };\n\n  // Excel → Notion senkronizasyonu başlat\n  const handleSync = () => {\n    fetch(\"http://127.0.0.1:8000/sync/excel-to-notion\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        excel_file_id: selectedExcelFile,\n        notion_database_id: notionDatabaseId,\n        mappings: mappings,\n        user_id: 1,\n      }),\n    })\n      .then((res) => res.json())\n      .then(() => alert(\"Sync tamamlandı!\"))\n      .catch((err) => console.error(\"Sync error:\", err));\n  };\n\n  return (\n    <div className=\"p-6 space-y-4\">\n      <h1 className=\"text-2xl font-bold\">Excel → Notion Senkronizasyon</h1>\n\n      {/* Excel dosyası seç */}\n      <div className=\"space-y-2\">\n        <label className=\"block font-medium\">Excel Dosyası</label>\n        <select\n          value={selectedExcelFile}\n          onChange={(e) => setSelectedExcelFile(e.target.value)}\n          className=\"border p-2 rounded-md w-full\"\n        >\n          <option value=\"\">Seçiniz...</option>\n          {excelFiles.map((file) => (\n            <option key={file.id} value={file.id}>\n              {file.name}\n            </option>\n          ))}\n        </select>\n        <button\n          onClick={fetchExcelColumns}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded-md\"\n        >\n          Excel Sütunlarını Getir\n        </button>\n      </div>\n\n      {/* Notion database id */}\n      <div className=\"space-y-2\">\n        <label className=\"block font-medium\">Notion Database ID</label>\n        <input\n          type=\"text\"\n          value={notionDatabaseId}\n          onChange={(e) => setNotionDatabaseId(e.target.value)}\n          className=\"border p-2 rounded-md w-full\"\n        />\n        <button\n          onClick={fetchNotionProperties}\n          className=\"bg-green-500 text-white px-4 py-2 rounded-md\"\n        >\n          Notion Özelliklerini Getir\n        </button>\n      </div>\n\n      {/* Mapping Section */}\n      <MappingSection\n        excelColumns={excelColumns}\n        notionProperties={notionProperties}\n        onChange={(newMappings: Mapping[]) => setMappings(newMappings)}\n      />\n\n      {/* Sync butonu */}\n      <div>\n        <button\n          onClick={handleSync}\n          className=\"bg-purple-500 text-white px-6 py-2 rounded-md\"\n        >\n          Excel’den Notion’a Sync\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
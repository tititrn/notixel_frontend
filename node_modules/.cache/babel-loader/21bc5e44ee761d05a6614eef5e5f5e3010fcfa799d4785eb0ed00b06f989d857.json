{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taha\\\\Desktop\\\\notion-excel-sync\\\\excel-notion-ui\\\\src\\\\AutoSyncDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoSyncDashboard = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const fetchFiles = async () => {\n    // Backend API'den otomatik sync yapılan dosyaları çek\n    // Örnek: /api/auto-sync-files\n    try {\n      const res = await fetch(\"/api/auto-sync-files\");\n      const data = await res.json();\n      setFiles(data.files);\n    } catch (err) {\n      console.error(\"Dosyalar alınamadı:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const toggleAutoSync = async (fileIndex, mappingIndex) => {\n    const file = files[fileIndex];\n    const mapping = file.mappings[mappingIndex];\n\n    // Backend’e güncelleme gönder\n    try {\n      const res = await fetch(\"/api/toggle-auto-sync\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          excel_file_name: file.excel_file_name,\n          notion_database_name: file.notion_database_name,\n          excel_column: mapping.excel_column,\n          notion_property: mapping.notion_property,\n          auto_sync: !mapping.auto_sync\n        })\n      });\n      if (res.ok) {\n        const updatedFiles = [...files];\n        updatedFiles[fileIndex].mappings[mappingIndex].auto_sync = !mapping.auto_sync;\n        setFiles(updatedFiles);\n      } else {\n        console.error(\"Auto sync güncellenemedi\");\n      }\n    } catch (err) {\n      console.error(\"Hata oluştu:\", err);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Y\\xFCkleniyor...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Otomatik Sync Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), files.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Otomatik sync yap\\u0131lm\\u0131\\u015F dosya bulunamad\\u0131.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 30\n    }, this), files.map((file, fileIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border rounded p-4 mb-4 shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: file.direction === \"excel-to-notion\" ? `${file.excel_file_name} → ${file.notion_database_name}` : `${file.notion_database_name} → ${file.excel_file_name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full border-collapse\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-left p-2\",\n              children: \"Excel S\\xFCtunu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-left p-2\",\n              children: \"Notion Property\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-left p-2\",\n              children: \"Otomatik Sync\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: file.mappings.map((mapping, mappingIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2\",\n              children: mapping.excel_column\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2\",\n              children: mapping.notion_property\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: mapping.auto_sync,\n                onChange: () => toggleAutoSync(fileIndex, mappingIndex),\n                className: \"cursor-pointer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)]\n          }, mapping.excel_column + mapping.notion_property, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, file.excel_file_name + file.notion_database_name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(AutoSyncDashboard, \"zMnqggxtwlDmTOERg77mrfWXT00=\");\n_c = AutoSyncDashboard;\nexport default AutoSyncDashboard;\nvar _c;\n$RefreshReg$(_c, \"AutoSyncDashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AutoSyncDashboard","_s","files","setFiles","loading","setLoading","fetchFiles","res","fetch","data","json","err","console","error","toggleAutoSync","fileIndex","mappingIndex","file","mapping","mappings","method","headers","body","JSON","stringify","excel_file_name","notion_database_name","excel_column","notion_property","auto_sync","ok","updatedFiles","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","direction","type","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Taha/Desktop/notion-excel-sync/excel-notion-ui/src/AutoSyncDashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\ntype Mapping = {\r\n  excel_column: string;\r\n  notion_property: string;\r\n  direction: \"excel-to-notion\" | \"notion-to-excel\";\r\n  auto_sync: boolean;\r\n};\r\n\r\ntype FileSyncInfo = {\r\n  excel_file_name: string;\r\n  notion_database_name: string;\r\n  direction: \"excel-to-notion\" | \"notion-to-excel\";\r\n  mappings: Mapping[];\r\n};\r\n\r\nconst AutoSyncDashboard: React.FC = () => {\r\n  const [files, setFiles] = useState<FileSyncInfo[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  const fetchFiles = async () => {\r\n    // Backend API'den otomatik sync yapılan dosyaları çek\r\n    // Örnek: /api/auto-sync-files\r\n    try {\r\n      const res = await fetch(\"/api/auto-sync-files\");\r\n      const data = await res.json();\r\n      setFiles(data.files);\r\n    } catch (err) {\r\n      console.error(\"Dosyalar alınamadı:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleAutoSync = async (\r\n    fileIndex: number,\r\n    mappingIndex: number\r\n  ) => {\r\n    const file = files[fileIndex];\r\n    const mapping = file.mappings[mappingIndex];\r\n\r\n    // Backend’e güncelleme gönder\r\n    try {\r\n      const res = await fetch(\"/api/toggle-auto-sync\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          excel_file_name: file.excel_file_name,\r\n          notion_database_name: file.notion_database_name,\r\n          excel_column: mapping.excel_column,\r\n          notion_property: mapping.notion_property,\r\n          auto_sync: !mapping.auto_sync,\r\n        }),\r\n      });\r\n\r\n      if (res.ok) {\r\n        const updatedFiles = [...files];\r\n        updatedFiles[fileIndex].mappings[mappingIndex].auto_sync =\r\n          !mapping.auto_sync;\r\n        setFiles(updatedFiles);\r\n      } else {\r\n        console.error(\"Auto sync güncellenemedi\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Hata oluştu:\", err);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Yükleniyor...</p>;\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Otomatik Sync Dashboard</h2>\r\n      {files.length === 0 && <p>Otomatik sync yapılmış dosya bulunamadı.</p>}\r\n\r\n      {files.map((file, fileIndex) => (\r\n        <div\r\n          key={file.excel_file_name + file.notion_database_name}\r\n          className=\"border rounded p-4 mb-4 shadow-sm\"\r\n        >\r\n          <h3 className=\"font-semibold mb-2\">\r\n            {file.direction === \"excel-to-notion\"\r\n              ? `${file.excel_file_name} → ${file.notion_database_name}`\r\n              : `${file.notion_database_name} → ${file.excel_file_name}`}\r\n          </h3>\r\n\r\n          <table className=\"w-full border-collapse\">\r\n            <thead>\r\n              <tr className=\"border-b\">\r\n                <th className=\"text-left p-2\">Excel Sütunu</th>\r\n                <th className=\"text-left p-2\">Notion Property</th>\r\n                <th className=\"text-left p-2\">Otomatik Sync</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {file.mappings.map((mapping, mappingIndex) => (\r\n                <tr key={mapping.excel_column + mapping.notion_property}>\r\n                  <td className=\"p-2\">{mapping.excel_column}</td>\r\n                  <td className=\"p-2\">{mapping.notion_property}</td>\r\n                  <td className=\"p-2\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={mapping.auto_sync}\r\n                      onChange={() =>\r\n                        toggleAutoSync(fileIndex, mappingIndex)\r\n                      }\r\n                      className=\"cursor-pointer\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoSyncDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
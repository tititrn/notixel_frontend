{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taha\\\\Desktop\\\\notion-excel-sync\\\\excel-notion-ui\\\\src\\\\HeaderComponent.tsx\";\nimport React from 'react';\n\n// API_BASE_URL'i App.tsx'ten çekilen değerle sabitliyoruz\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\n// Yeni adımları (dashboard, profile) ve userEmail prop'unu ekliyoruz\n\nconst HeaderComponent = ({\n  setStep,\n  userEmail\n}) => {\n  // Bağlantı durumuna göre hangi linklerin görüneceğini belirler\n  const loggedIn = !!userEmail;\n\n  // Logo ve navigasyon menüsü\n  return (\n    /*#__PURE__*/\n    // `header` class'ı global stil için kullanılacaktır\n    _jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          onClick: () => setStep('home'),\n          children: \"NotiXel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#features\",\n            children: \"Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#pricing\",\n            children: \"Pricing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#faq\",\n            children: \"FAQ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), loggedIn && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: e => {\n              e.preventDefault();\n              setStep('dashboard');\n            },\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-buttons\",\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setStep('profile'),\n              className: \"btn btn-login\",\n              title: \"Abonelik ve Profil Y\\xF6netimi\",\n              style: {\n                backgroundColor: '#4CAF50',\n                // Yeşil renk\n                fontWeight: 'bold',\n                cursor: 'pointer'\n              },\n              children: userEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)\n          }, void 0, false) :\n          /*#__PURE__*/\n          /* --- KULLANICI GİRİŞ YAPMAMIŞSA (LOGGED OUT) --- */\n          _jsxDEV(\"a\", {\n            href: `${API_BASE_URL}/connect/microsoft`,\n            className: \"btn btn-login\",\n            children: \"Log in / Get Started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = HeaderComponent;\nexport default HeaderComponent;\nvar _c;\n$RefreshReg$(_c, \"HeaderComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","HeaderComponent","setStep","userEmail","loggedIn","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","href","e","preventDefault","title","style","backgroundColor","fontWeight","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Taha/Desktop/notion-excel-sync/excel-notion-ui/src/HeaderComponent.tsx"],"sourcesContent":["import React from 'react';\r\n\r\n// API_BASE_URL'i App.tsx'ten çekilen değerle sabitliyoruz\r\nconst API_BASE_URL = 'http://127.0.0.1:8000'; \r\n\r\n// Yeni adımları (dashboard, profile) ve userEmail prop'unu ekliyoruz\r\ninterface HeaderProps {\r\n    // setStep, global navigasyon için gereklidir (örneğin logo tıklanması)\r\n    // Artık 'dashboard' ve 'profile' adımlarını da içeriyor\r\n    setStep: (step: 'home' | 'privacy' | 'terms' | 'connect' | 'dashboard' | 'profile') => void; \r\n    userEmail: string | null; // App.tsx'ten gelen kullanıcı e-postası\r\n}\r\n\r\nconst HeaderComponent: React.FC<HeaderProps> = ({ setStep, userEmail }) => {\r\n    \r\n    // Bağlantı durumuna göre hangi linklerin görüneceğini belirler\r\n    const loggedIn = !!userEmail;\r\n    \r\n    // Logo ve navigasyon menüsü\r\n    return (\r\n        // `header` class'ı global stil için kullanılacaktır\r\n        <header className=\"header\">\r\n            <div className=\"container\">\r\n                {/* Logo: Tıklanınca ana sayfaya yönlendir */}\r\n                <div className=\"logo\" onClick={() => setStep('home')}>NotiXel</div> \r\n                \r\n                <nav className=\"nav\">\r\n                    {/* Ana sayfadaki anchor linklere yönlendirme */}\r\n                    <a href=\"#features\">Features</a>\r\n                    <a href=\"#pricing\">Pricing</a>\r\n                    <a href=\"#faq\">FAQ</a>\r\n\r\n                    {/* Giriş yapmış kullanıcılar için Dashboard linki */}\r\n                    {loggedIn && (\r\n                        <a href=\"#\" onClick={(e) => { e.preventDefault(); setStep('dashboard'); }}>\r\n                            Dashboard\r\n                        </a>\r\n                    )}\r\n                </nav>\r\n                \r\n                <div className=\"auth-buttons\">\r\n                    {/* --- KULLANICI GİRİŞ YAPMIŞSA (LOGGED IN) --- */}\r\n                    {loggedIn ? (\r\n                        <>\r\n                            {/* PROFİL BUTONU: E-postayı gösterir ve Profile sayfasına yönlendirir */}\r\n                            <button\r\n                                onClick={() => setStep('profile')}\r\n                                className=\"btn btn-login\"\r\n                                title=\"Abonelik ve Profil Yönetimi\"\r\n                                style={{ \r\n                                    backgroundColor: '#4CAF50', // Yeşil renk\r\n                                    fontWeight: 'bold',\r\n                                    cursor: 'pointer' \r\n                                }}\r\n                            >\r\n                                {userEmail}\r\n                            </button>\r\n                            \r\n                            {/* NOT: LOGOUT İŞLEMİ GEREKİYORSA BURAYA EKLENMELİDİR */}\r\n                            \r\n                        </>\r\n                    ) : (\r\n                        /* --- KULLANICI GİRİŞ YAPMAMIŞSA (LOGGED OUT) --- */\r\n                        <a \r\n                            href={`${API_BASE_URL}/connect/microsoft`} \r\n                            className=\"btn btn-login\"\r\n                        >\r\n                            Log in / Get Started\r\n                        </a>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default HeaderComponent;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAAG,uBAAuB;;AAE5C;;AAQA,MAAMC,eAAsC,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAU,CAAC,KAAK;EAEvE;EACA,MAAMC,QAAQ,GAAG,CAAC,CAACD,SAAS;;EAE5B;EACA;IAAA;IACI;IACAN,OAAA;MAAQQ,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACtBT,OAAA;QAAKQ,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAEtBT,OAAA;UAAKQ,SAAS,EAAC,MAAM;UAACE,OAAO,EAAEA,CAAA,KAAML,OAAO,CAAC,MAAM,CAAE;UAAAI,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAEnEd,OAAA;UAAKQ,SAAS,EAAC,KAAK;UAAAC,QAAA,gBAEhBT,OAAA;YAAGe,IAAI,EAAC,WAAW;YAAAN,QAAA,EAAC;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAChCd,OAAA;YAAGe,IAAI,EAAC,UAAU;YAAAN,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC9Bd,OAAA;YAAGe,IAAI,EAAC,MAAM;YAAAN,QAAA,EAAC;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EAGrBP,QAAQ,iBACLP,OAAA;YAAGe,IAAI,EAAC,GAAG;YAACL,OAAO,EAAGM,CAAC,IAAK;cAAEA,CAAC,CAACC,cAAc,CAAC,CAAC;cAAEZ,OAAO,CAAC,WAAW,CAAC;YAAE,CAAE;YAAAI,QAAA,EAAC;UAE3E;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAENd,OAAA;UAAKQ,SAAS,EAAC,cAAc;UAAAC,QAAA,EAExBF,QAAQ,gBACLP,OAAA,CAAAE,SAAA;YAAAO,QAAA,eAEIT,OAAA;cACIU,OAAO,EAAEA,CAAA,KAAML,OAAO,CAAC,SAAS,CAAE;cAClCG,SAAS,EAAC,eAAe;cACzBU,KAAK,EAAC,gCAA6B;cACnCC,KAAK,EAAE;gBACHC,eAAe,EAAE,SAAS;gBAAE;gBAC5BC,UAAU,EAAE,MAAM;gBAClBC,MAAM,EAAE;cACZ,CAAE;cAAAb,QAAA,EAEDH;YAAS;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN;UAAC,gBAIX,CAAC;UAAA;UAEH;UACAd,OAAA;YACIe,IAAI,EAAE,GAAGZ,YAAY,oBAAqB;YAC1CK,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC5B;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;AAEjB,CAAC;AAACS,EAAA,GA7DInB,eAAsC;AA+D5C,eAAeA,eAAe;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
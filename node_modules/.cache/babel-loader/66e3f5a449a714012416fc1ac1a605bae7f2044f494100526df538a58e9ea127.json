{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taha\\\\Desktop\\\\notion-excel-sync\\\\excel-notion-ui\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// API'ye yapılacak çağrıların temel URL'si\nconst API_BASE_URL = 'http://127.0.0.1:8000';\nfunction App() {\n  _s();\n  const [step, setStep] = useState('connect');\n  const [excelFiles, setExcelFiles] = useState([]);\n  const [excelColumns, setExcelColumns] = useState([]);\n  const [notionProperties, setNotionProperties] = useState([]);\n  const [selectedExcelId, setSelectedExcelId] = useState('');\n  const [notionDbId, setNotionDbId] = useState('');\n  const [message, setMessage] = useState('');\n  const [userId, setUserId] = useState(null);\n  const [mappings, setMappings] = useState([]);\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const authSuccess = params.get('auth_success');\n    const authError = params.get('auth_error');\n    const receivedUserId = params.get('user_id');\n    const storedUserId = localStorage.getItem('user_id');\n    if (authSuccess === 'true' && receivedUserId) {\n      setUserId(receivedUserId);\n      setStep('select');\n      localStorage.setItem('user_id', receivedUserId);\n      fetchExcelFiles(receivedUserId);\n      window.history.replaceState({}, document.title, window.location.pathname);\n    } else if (authError === 'true') {\n      setMessage(`Yetkilendirme hatası: ${params.get('message')}`);\n      setStep('connect');\n    } else if (storedUserId) {\n      setUserId(storedUserId);\n      setStep('select');\n      fetchExcelFiles(storedUserId);\n    } else {\n      setStep('connect');\n    }\n  }, []);\n  const handleMicrosoftConnect = () => {\n    window.location.href = `${API_BASE_URL}/connect/microsoft`;\n  };\n  const handleNotionConnect = () => {\n    setMessage('Notion hesabınızı bağlamak için, Notion\\'da herhangi bir veritabanı veya sayfasına gidin, \"...\" menüsünden \"Add connections\"ı seçin ve oluşturduğunuz entegrasyonu (\"Excel Sync\") ekleyin.');\n  };\n  const fetchExcelFiles = async currentUserId => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/get-excel-files?user_id=${currentUserId}`);\n      const data = await response.json();\n      if (response.ok) {\n        setExcelFiles(data.files);\n      } else {\n        setMessage(`Excel dosyaları alınamadı: ${data.error}`);\n      }\n    } catch (error) {\n      setMessage('Excel dosyaları alınırken ağ hatası oluştu.');\n    }\n  };\n  const fetchExcelColumns = async fileId => {\n    if (!userId) return;\n    try {\n      const response = await fetch(`${API_BASE_URL}/get-excel-columns?excel_file_id=${fileId}&user_id=${userId}`);\n      const data = await response.json();\n      if (response.ok) {\n        // ID sütununu otomatik olarak eşleştirme\n        const idColumn = data.columns.find(col => col.toLowerCase() === 'id');\n        let initialMappings = [];\n        let filteredColumns = data.columns.map(name => ({\n          name\n        }));\n        if (idColumn) {\n          // Eğer 'ID' sütunu varsa, zorunlu eşleşmeyi oluştur\n          initialMappings.push({\n            excel_column: idColumn,\n            notion_property: 'ID',\n            data_type: 'rich_text'\n          });\n          // ID sütununu kullanıcıya gösterilecek listeden kaldır\n          filteredColumns = filteredColumns.filter(col => col.name.toLowerCase() !== 'id');\n        }\n\n        // Kalan sütunlar için boş eşleşmeler oluştur\n        const otherMappings = filteredColumns.map(col => ({\n          excel_column: col.name,\n          notion_property: '',\n          data_type: ''\n        }));\n        setExcelColumns(filteredColumns);\n        setMappings([...initialMappings, ...otherMappings]);\n      } else {\n        setMessage(`Excel sütunları alınamadı: ${data.error}`);\n      }\n    } catch (error) {\n      setMessage('Excel sütunları alınırken ağ hatası oluştu.');\n    }\n  };\n  const fetchNotionProperties = async () => {\n    if (!notionDbId) {\n      setMessage('Lütfen bir Notion Veritabanı ID\\'si girin.');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/get-notion-properties?notion_database_id=${notionDbId}`);\n      const data = await response.json();\n      if (response.ok) {\n        setNotionProperties(data.properties);\n        setStep('mapping');\n        setMessage('');\n      } else {\n        setMessage(`Notion özellikleri alınamadı: ${data.error}`);\n      }\n    } catch (error) {\n      setMessage('Notion özelliklerini alırken ağ hatası oluştu.');\n    }\n  };\n  const handleExcelFileChange = e => {\n    const fileId = e.target.value;\n    setSelectedExcelId(fileId);\n    if (fileId) {\n      fetchExcelColumns(fileId);\n    }\n  };\n  const handleMappingChange = (excelColumnName, notionPropertyName) => {\n    setMappings(prevMappings => {\n      const newMappings = [...prevMappings];\n      const mappingIndex = newMappings.findIndex(m => m.excel_column === excelColumnName);\n      if (mappingIndex > -1) {\n        const selectedNotionProp = notionProperties.find(p => p.name === notionPropertyName);\n        newMappings[mappingIndex] = {\n          ...newMappings[mappingIndex],\n          notion_property: notionPropertyName,\n          data_type: (selectedNotionProp === null || selectedNotionProp === void 0 ? void 0 : selectedNotionProp.type) || ''\n        };\n      }\n      return newMappings;\n    });\n  };\n  const saveMappingAndStartSync = async syncDirection => {\n    if (!userId) {\n      setMessage('Kullanıcı kimliği bulunamadı. Lütfen tekrar giriş yapın.');\n      return;\n    }\n    try {\n      const saveResponse = await fetch(`${API_BASE_URL}/save-mapping?user_id=${userId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(mappings)\n      });\n      if (!saveResponse.ok) {\n        const saveError = await saveResponse.json();\n        setMessage(`Eşleme kaydedilemedi: ${saveError.error}`);\n        return;\n      }\n      setMessage('Eşleme başarıyla kaydedildi.');\n      const syncResponse = await fetch(`${API_BASE_URL}/sync/${syncDirection}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          excel_file_id: selectedExcelId,\n          notion_database_id: notionDbId,\n          user_id: parseInt(userId, 10)\n        })\n      });\n      if (!syncResponse.ok) {\n        const syncError = await syncResponse.json();\n        setMessage(`Senkronizasyon başlatılamadı: ${syncError.detail || syncError.error}`);\n        return;\n      }\n      setStep('complete');\n      setMessage('Senkronizasyon başarıyla tamamlandı!');\n    } catch (error) {\n      setMessage('Eşleme kaydetme veya senkronizasyon başlatma sırasında ağ hatası oluştu.');\n    }\n  };\n  const renderConnectStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMicrosoftConnect,\n      children: \"Microsoft Hesab\\u0131n\\u0131 Ba\\u011Fla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNotionConnect,\n      children: \"Notion Ba\\u011Flant\\u0131s\\u0131n\\u0131 Kur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n  const renderSelectStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Excel Dosyas\\u0131n\\u0131 ve Notion Veritaban\\u0131n\\u0131 Se\\xE7in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Excel Dosyas\\u0131 Se\\xE7in:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedExcelId,\n          onChange: handleExcelFileChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Dosya Se\\xE7iniz...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), excelFiles.map(file => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: file.id,\n            children: file.name\n          }, file.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Notion Veritaban\\u0131 ID'si:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: notionDbId,\n          onChange: e => setNotionDbId(e.target.value),\n          placeholder: \"Veritaban\\u0131 ID'sini yap\\u0131\\u015Ft\\u0131r\\u0131n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchNotionProperties,\n      disabled: !selectedExcelId || !notionDbId,\n      children: \"Notion \\xD6zelliklerini Getir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n  const renderMappingStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"S\\xFCtunlar\\u0131 E\\u015Fle\\u015Ftirin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapping-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapping-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Excel S\\xFCtunlar\\u0131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"excel-name\",\n              children: \"ID (Zorunlu)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)\n          }, \"id-locked\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), excelColumns.map((column, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"excel-name\",\n              children: column.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapping-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notion \\xD6zellikleri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notion-name\",\n              children: \"ID (Zorunlu)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)\n          }, \"notion-id-locked\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), mappings.filter(m => m.excel_column.toLowerCase() !== 'id') // ID eşleşmesini listeden filtrele\n          .map((mapping, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: mapping.notion_property,\n              onChange: e => handleMappingChange(mapping.excel_column, e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Se\\xE7iniz...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this), notionProperties.map(prop => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: prop.name,\n                children: [prop.name, \" (\", prop.type, \")\"]\n              }, prop.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sync-buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => saveMappingAndStartSync('excel-to-notion'),\n        disabled: !mappings.length,\n        children: \"Excel'den Notion'a E\\u015Fitle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => saveMappingAndStartSync('notion-to-excel'),\n        disabled: !mappings.length,\n        children: \"Notion'dan Excel'e E\\u015Fitle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n  const renderCompleteStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Senkronizasyon Ba\\u015Far\\u0131l\\u0131!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Se\\xE7ti\\u011Finiz y\\xF6nde senkronizasyon tamamland\\u0131. Uygulama, dosyan\\u0131zdaki de\\u011Fi\\u015Fiklikleri takip etmeye ve verileri otomatik olarak senkronize etmeye devam edecektir.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setStep('select'),\n      children: \"Yeni Senkronizasyon Ba\\u015Flat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notion & Excel Senkronizasyonu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }, this), step === 'connect' && renderConnectStep(), step === 'select' && renderSelectStep(), step === 'mapping' && renderMappingStep(), step === 'complete' && renderCompleteStep()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JaczmQBZ6AbVP1FIcCGpqDWiGPU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","step","setStep","excelFiles","setExcelFiles","excelColumns","setExcelColumns","notionProperties","setNotionProperties","selectedExcelId","setSelectedExcelId","notionDbId","setNotionDbId","message","setMessage","userId","setUserId","mappings","setMappings","params","URLSearchParams","window","location","search","authSuccess","get","authError","receivedUserId","storedUserId","localStorage","getItem","setItem","fetchExcelFiles","history","replaceState","document","title","pathname","handleMicrosoftConnect","href","handleNotionConnect","currentUserId","response","fetch","data","json","ok","files","error","fetchExcelColumns","fileId","idColumn","columns","find","col","toLowerCase","initialMappings","filteredColumns","map","name","push","excel_column","notion_property","data_type","filter","otherMappings","fetchNotionProperties","properties","handleExcelFileChange","e","target","value","handleMappingChange","excelColumnName","notionPropertyName","prevMappings","newMappings","mappingIndex","findIndex","m","selectedNotionProp","p","type","saveMappingAndStartSync","syncDirection","saveResponse","method","headers","body","JSON","stringify","saveError","syncResponse","excel_file_id","notion_database_id","user_id","parseInt","syncError","detail","renderConnectStep","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","renderSelectStep","onChange","file","id","placeholder","disabled","renderMappingStep","column","index","mapping","prop","length","renderCompleteStep","_c","$RefreshReg$"],"sources":["C:/Users/Taha/Desktop/notion-excel-sync/excel-notion-ui/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\ntype AppStep = 'connect' | 'select' | 'mapping' | 'complete';\ntype ExcelFile = { id: string; name: string };\ntype ExcelColumn = { name: string };\ntype NotionProperty = { name: string; type: string };\ntype Mapping = { excel_column: string; notion_property: string; data_type: string };\n\n// API'ye yapılacak çağrıların temel URL'si\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\nfunction App() {\n  const [step, setStep] = useState<AppStep>('connect');\n  const [excelFiles, setExcelFiles] = useState<ExcelFile[]>([]);\n  const [excelColumns, setExcelColumns] = useState<ExcelColumn[]>([]);\n  const [notionProperties, setNotionProperties] = useState<NotionProperty[]>([]);\n  const [selectedExcelId, setSelectedExcelId] = useState<string>('');\n  const [notionDbId, setNotionDbId] = useState<string>('');\n  const [message, setMessage] = useState<string>('');\n  const [userId, setUserId] = useState<string | null>(null);\n  const [mappings, setMappings] = useState<Mapping[]>([]);\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const authSuccess = params.get('auth_success');\n    const authError = params.get('auth_error');\n    const receivedUserId = params.get('user_id');\n    const storedUserId = localStorage.getItem('user_id');\n\n    if (authSuccess === 'true' && receivedUserId) {\n      setUserId(receivedUserId);\n      setStep('select');\n      localStorage.setItem('user_id', receivedUserId);\n      fetchExcelFiles(receivedUserId);\n      window.history.replaceState({}, document.title, window.location.pathname);\n    } else if (authError === 'true') {\n      setMessage(`Yetkilendirme hatası: ${params.get('message')}`);\n      setStep('connect');\n    } else if (storedUserId) {\n      setUserId(storedUserId);\n      setStep('select');\n      fetchExcelFiles(storedUserId);\n    } else {\n      setStep('connect');\n    }\n\n  }, []);\n\n  const handleMicrosoftConnect = () => {\n    window.location.href = `${API_BASE_URL}/connect/microsoft`;\n  };\n\n  const handleNotionConnect = () => {\n    setMessage('Notion hesabınızı bağlamak için, Notion\\'da herhangi bir veritabanı veya sayfasına gidin, \"...\" menüsünden \"Add connections\"ı seçin ve oluşturduğunuz entegrasyonu (\"Excel Sync\") ekleyin.');\n  };\n\n  const fetchExcelFiles = async (currentUserId: string) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/get-excel-files?user_id=${currentUserId}`);\n      const data = await response.json();\n      if (response.ok) {\n        setExcelFiles(data.files);\n      } else {\n        setMessage(`Excel dosyaları alınamadı: ${data.error}`);\n      }\n    } catch (error) {\n      setMessage('Excel dosyaları alınırken ağ hatası oluştu.');\n    }\n  };\n\n  const fetchExcelColumns = async (fileId: string) => {\n    if (!userId) return;\n    try {\n      const response = await fetch(`${API_BASE_URL}/get-excel-columns?excel_file_id=${fileId}&user_id=${userId}`);\n      const data = await response.json();\n      if (response.ok) {\n        // ID sütununu otomatik olarak eşleştirme\n        const idColumn = data.columns.find((col: string) => col.toLowerCase() === 'id');\n        let initialMappings: Mapping[] = [];\n        let filteredColumns: ExcelColumn[] = data.columns.map((name: string) => ({ name }));\n\n        if (idColumn) {\n          // Eğer 'ID' sütunu varsa, zorunlu eşleşmeyi oluştur\n          initialMappings.push({ excel_column: idColumn, notion_property: 'ID', data_type: 'rich_text' });\n          // ID sütununu kullanıcıya gösterilecek listeden kaldır\n          filteredColumns = filteredColumns.filter(col => col.name.toLowerCase() !== 'id');\n        }\n\n        // Kalan sütunlar için boş eşleşmeler oluştur\n        const otherMappings = filteredColumns.map(col => ({\n          excel_column: col.name,\n          notion_property: '',\n          data_type: ''\n        }));\n\n        setExcelColumns(filteredColumns);\n        setMappings([...initialMappings, ...otherMappings]);\n      } else {\n        setMessage(`Excel sütunları alınamadı: ${data.error}`);\n      }\n    } catch (error) {\n      setMessage('Excel sütunları alınırken ağ hatası oluştu.');\n    }\n  };\n\n  const fetchNotionProperties = async () => {\n    if (!notionDbId) {\n      setMessage('Lütfen bir Notion Veritabanı ID\\'si girin.');\n      return;\n    }\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/get-notion-properties?notion_database_id=${notionDbId}`);\n      const data = await response.json();\n      if (response.ok) {\n        setNotionProperties(data.properties);\n        setStep('mapping');\n        setMessage('');\n      } else {\n        setMessage(`Notion özellikleri alınamadı: ${data.error}`);\n      }\n    } catch (error) {\n      setMessage('Notion özelliklerini alırken ağ hatası oluştu.');\n    }\n  };\n\n  const handleExcelFileChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const fileId = e.target.value;\n    setSelectedExcelId(fileId);\n    if (fileId) {\n      fetchExcelColumns(fileId);\n    }\n  };\n\n  const handleMappingChange = (excelColumnName: string, notionPropertyName: string) => {\n    setMappings(prevMappings => {\n      const newMappings = [...prevMappings];\n      const mappingIndex = newMappings.findIndex(m => m.excel_column === excelColumnName);\n\n      if (mappingIndex > -1) {\n        const selectedNotionProp = notionProperties.find(p => p.name === notionPropertyName);\n        newMappings[mappingIndex] = {\n          ...newMappings[mappingIndex],\n          notion_property: notionPropertyName,\n          data_type: selectedNotionProp?.type || ''\n        };\n      }\n      return newMappings;\n    });\n  };\n\n  const saveMappingAndStartSync = async (syncDirection: 'excel-to-notion' | 'notion-to-excel') => {\n    if (!userId) {\n      setMessage('Kullanıcı kimliği bulunamadı. Lütfen tekrar giriş yapın.');\n      return;\n    }\n\n    try {\n      const saveResponse = await fetch(`${API_BASE_URL}/save-mapping?user_id=${userId}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(mappings),\n      });\n\n      if (!saveResponse.ok) {\n        const saveError = await saveResponse.json();\n        setMessage(`Eşleme kaydedilemedi: ${saveError.error}`);\n        return;\n      }\n      setMessage('Eşleme başarıyla kaydedildi.');\n\n      const syncResponse = await fetch(`${API_BASE_URL}/sync/${syncDirection}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          excel_file_id: selectedExcelId,\n          notion_database_id: notionDbId,\n          user_id: parseInt(userId, 10),\n        }),\n      });\n\n      if (!syncResponse.ok) {\n        const syncError = await syncResponse.json();\n        setMessage(`Senkronizasyon başlatılamadı: ${syncError.detail || syncError.error}`);\n        return;\n      }\n\n      setStep('complete');\n      setMessage('Senkronizasyon başarıyla tamamlandı!');\n\n    } catch (error) {\n      setMessage('Eşleme kaydetme veya senkronizasyon başlatma sırasında ağ hatası oluştu.');\n    }\n  };\n\n  const renderConnectStep = () => (\n    <div className=\"step-container\">\n      <button onClick={handleMicrosoftConnect}>Microsoft Hesabını Bağla</button>\n      <button onClick={handleNotionConnect}>Notion Bağlantısını Kur</button>\n    </div>\n  );\n\n  const renderSelectStep = () => (\n    <div className=\"step-container\">\n      <h2>Excel Dosyasını ve Notion Veritabanını Seçin</h2>\n      <div>\n        <label>\n          Excel Dosyası Seçin:\n          <select value={selectedExcelId} onChange={handleExcelFileChange}>\n            <option value=\"\">Dosya Seçiniz...</option>\n            {excelFiles.map(file => (\n              <option key={file.id} value={file.id}>{file.name}</option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <div>\n        <label>\n          Notion Veritabanı ID'si:\n          <input\n            type=\"text\"\n            value={notionDbId}\n            onChange={(e) => setNotionDbId(e.target.value)}\n            placeholder=\"Veritabanı ID'sini yapıştırın\"\n          />\n        </label>\n      </div>\n      <button onClick={fetchNotionProperties} disabled={!selectedExcelId || !notionDbId}>Notion Özelliklerini Getir</button>\n    </div>\n  );\n\n  const renderMappingStep = () => (\n    <div className=\"step-container\">\n      <h2>Sütunları Eşleştirin</h2>\n      <div className=\"mapping-grid\">\n        <div className=\"mapping-section\">\n          <h3>Excel Sütunları</h3>\n          <ul>\n            <li key=\"id-locked\">\n              <span className=\"excel-name\">ID (Zorunlu)</span>\n            </li>\n            {excelColumns.map((column, index) => (\n              <li key={index}>\n                <span className=\"excel-name\">{column.name}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"mapping-section\">\n          <h3>Notion Özellikleri</h3>\n          <ul>\n            <li key=\"notion-id-locked\">\n              <span className=\"notion-name\">ID (Zorunlu)</span>\n            </li>\n            {mappings\n              .filter(m => m.excel_column.toLowerCase() !== 'id') // ID eşleşmesini listeden filtrele\n              .map((mapping, index) => (\n                <li key={index}>\n                  <select\n                    value={mapping.notion_property}\n                    onChange={(e) => handleMappingChange(mapping.excel_column, e.target.value)}\n                  >\n                    <option value=\"\">Seçiniz...</option>\n                    {notionProperties.map(prop => (\n                      <option key={prop.name} value={prop.name}>{prop.name} ({prop.type})</option>\n                    ))}\n                  </select>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"sync-buttons-container\">\n        <button onClick={() => saveMappingAndStartSync('excel-to-notion')} disabled={!mappings.length}>\n          Excel'den Notion'a Eşitle\n        </button>\n        <button onClick={() => saveMappingAndStartSync('notion-to-excel')} disabled={!mappings.length}>\n          Notion'dan Excel'e Eşitle\n        </button>\n      </div>\n    </div>\n  );\n  \n  const renderCompleteStep = () => (\n    <div className=\"step-container\">\n      <h2>Senkronizasyon Başarılı!</h2>\n      <p>Seçtiğiniz yönde senkronizasyon tamamlandı. Uygulama, dosyanızdaki değişiklikleri takip etmeye ve verileri otomatik olarak senkronize etmeye devam edecektir.</p>\n      <button onClick={() => setStep('select')}>Yeni Senkronizasyon Başlat</button>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Notion & Excel Senkronizasyonu</h1>\n        \n        {message && <p className=\"message\">{message}</p>}\n\n        {step === 'connect' && renderConnectStep()}\n        {step === 'select' && renderSelectStep()}\n        {step === 'mapping' && renderMappingStep()}\n        {step === 'complete' && renderCompleteStep()}\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
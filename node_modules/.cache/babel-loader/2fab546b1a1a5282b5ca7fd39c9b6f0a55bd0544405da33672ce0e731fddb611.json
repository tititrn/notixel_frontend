{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taha\\\\Desktop\\\\notion-excel-sync\\\\excel-notion-ui\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Dashboard from './AutoSyncDashboard';\nimport Home from './Home'; // Yeni Home bileşenini import ediyoruz!\nimport PrivacyPolicy from './PrivacyPolicy';\nimport TermsAndConditions from './TermsAndConditions';\n// YENİ İMPORTLAR\nimport HeaderComponent from './HeaderComponent';\nimport FooterComponent from './FooterComponent';\nimport Profile from './Profile';\n\n// 'home' adımını AppStep türüne ekliyoruz\n// YENİ TİP EKLENTİLERİ: 'privacy' ve 'terms' eklendi\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:8000';\nfunction App() {\n  _s();\n  // Başlangıç adımını, localStorage'daki user_id'ye göre belirliyoruz.\n  const initialUserId = localStorage.getItem('user_id');\n  // ID varsa 'connect' adımında başla, yoksa 'home' (giriş) sayfasında başla.\n  const initialStep = initialUserId ? 'connect' : 'home';\n  const [step, setStep] = useState(initialStep);\n  const [userEmail, setUserEmail] = useState(localStorage.getItem('user_email'));\n  const [syncDirection, setSyncDirection] = useState('excel-to-notion');\n  const [autoSyncToggle, setAutoSyncToggle] = useState(false);\n  const [excelFiles, setExcelFiles] = useState([]);\n  const [excelColumns, setExcelColumns] = useState([]);\n  const [notionProperties, setNotionProperties] = useState([]);\n  const [selectedExcelId, setSelectedExcelId] = useState('');\n  const [excelWorksheets, setExcelWorksheets] = useState([]); // Yeni\n  const [selectedWorksheetName, setSelectedWorksheetName] = useState(''); // Yeni\n  const [notionDbId, setNotionDbId] = useState('');\n  const [message, setMessage] = useState('');\n  const [userId, setUserId] = useState(initialUserId); // initialUserId'yi kullanıyoruz\n\n  const [excelToNotionMappings, setExcelToNotionMappings] = useState([]);\n  const [notionToExcelMappings, setNotionToExcelMappings] = useState([]);\n  const [unmatchedColumns, setUnmatchedColumns] = useState([]);\n  const [selectedColumnsToCreate, setSelectedColumnsToCreate] = useState([]);\n  const [autoSyncColumns, setAutoSyncColumns] = useState([]);\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const receivedUserId = params.get('user_id');\n    const notionAuthSuccess = params.get('notion_auth_success') === 'true';\n    const notionAuthError = params.get('notion_auth_error') === 'true';\n    const authSuccess = params.get('auth_success') === 'true';\n\n    // Helper: Kullanıcı verilerini kaydeder ve Notion bağlantısını kontrol eder.\n    const initializeApp = async (id, isNewLogin) => {\n      setUserId(id);\n      localStorage.setItem('user_id', id);\n      const hasNotionKey = await checkNotionStatus(id);\n      if (!hasNotionKey) {\n        setStep('notion_connect');\n        if (isNewLogin) setMessage('Microsoft bağlantısı başarılı. Şimdi Notion hesabınızı bağlayın.');\n      } else {\n        setStep('select');\n        fetchExcelFiles(id);\n        if (isNewLogin) setMessage('Bağlantılar tamam! Excel dosyanızı seçin.');\n      }\n    };\n\n    // --- 1. Notion Callback Handling (Notion'dan döndüğünde) ---\n    if (notionAuthSuccess) {\n      const currentId = localStorage.getItem('user_id');\n      if (currentId) {\n        setStep('select');\n        fetchExcelFiles(currentId);\n        setMessage('Notion bağlantısı başarılı! Şimdi bir dosya seçin.');\n      } else {\n        setMessage('Hata: Notion bağlantısı başarılı ancak kullanıcı ID kayıp.');\n        setStep('home');\n      }\n      window.history.replaceState(null, '', window.location.pathname);\n      return;\n    }\n    if (notionAuthError) {\n      setMessage(`Notion bağlantı hatası: ${params.get('message') || 'Bilinmeyen hata.'}`);\n      setStep('notion_connect');\n      window.history.replaceState(null, '', window.location.pathname);\n      return;\n    }\n\n    // --- 2. Microsoft Callback Handling (Microsoft'tan döndüğünde) ---\n    if (authSuccess && receivedUserId) {\n      initializeApp(receivedUserId, true);\n      window.history.replaceState(null, '', window.location.pathname);\n      return;\n    }\n\n    // --- 3. Persistent Session / Initial Load Handling ---\n    const storedUserId = localStorage.getItem('user_id');\n    // Eğer localStorage'da ID varsa ve mevcut adım 'home' değilse (yani oturum açma akışına girmişse)\n    if (storedUserId && step !== 'home') {\n      initializeApp(storedUserId, false);\n      return;\n    }\n\n    // --- 4. Default: Show Home Page ---\n    // Eğer hiçbir şey tetiklenmediyse ve ID yoksa, Home'u göster.\n    if (!storedUserId) {\n      setStep('home');\n    }\n  }, []);\n\n  // ... (Tüm fetch ve handler fonksiyonları burada devam eder)\n\n  // 1. Yeni Sayfa Çekme Fonksiyonu\n  const fetchExcelWorksheets = async (fileId, currentUserId) => {\n    try {\n      // Backend'deki yeni endpoint'i çağırın\n      const res = await fetch(`${API_BASE_URL}/get-excel-worksheets?excel_file_id=${fileId}&user_id=${currentUserId}`);\n      const data = await res.json();\n      if (res.ok) {\n        // Data'nın [\"Sayfa1\", \"Sayfa2\"] formatında geldiğini varsayıyoruz\n        const worksheets = data.worksheets.map(name => ({\n          name\n        }));\n        setExcelWorksheets(worksheets);\n        if (worksheets.length === 1) {\n          // Tek sayfa varsa otomatik seç ve sütunları çek\n          setSelectedWorksheetName(worksheets[0].name);\n          fetchExcelColumns(fileId, worksheets[0].name);\n        } else {\n          // Sütunları temizle ve kullanıcının seçmesini bekle\n          setExcelColumns([]);\n        }\n      } else setMessage(`Excel sayfaları alınamadı: ${data.error}`);\n    } catch {\n      setMessage('Excel sayfaları alınırken ağ hatası oluştu.');\n    }\n  };\n  const handleMicrosoftConnect = () => {\n    window.location.href = `${API_BASE_URL}/connect/microsoft`;\n  };\n  const checkNotionStatus = async currentUserId => {\n    // DEV MODE: Notion bağlantısı kontrolü atlanıyor.\n    // return true; // Eğer test amaçlı Notion bağlantısını atlamak isterseniz\n    try {\n      const res = await fetch(`${API_BASE_URL}/check-notion-status?user_id=${currentUserId}`);\n      const data = await res.json();\n      if (res.ok) {\n        // Backend'den { has_notion_key: true/false } şeklinde bir yanıt bekliyoruz.\n        return data.has_notion_key;\n      }\n      return false;\n    } catch {\n      setMessage('Bağlantı kontrolü sırasında ağ hatası oluştu.');\n      return false;\n    }\n  };\n  const fetchExcelFiles = async currentUserId => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/get-excel-files?user_id=${currentUserId}`);\n      const data = await res.json();\n      if (res.ok) setExcelFiles(data.files);else setMessage(`Excel dosyaları alınamadı: ${data.error}`);\n    } catch {\n      setMessage('Excel dosyaları alınırken ağ hatası oluştu.');\n    }\n  };\n  const fetchExcelColumns = async (fileId, worksheetName) => {\n    if (!userId || !worksheetName) return;\n    try {\n      const res = await fetch(`${API_BASE_URL}/get-excel-columns?excel_file_id=${fileId}&worksheet_name=${worksheetName}&user_id=${userId}`);\n      const data = await res.json();\n      if (res.ok) {\n        const columns = data.columns.map(name => ({\n          name\n        }));\n        const hasId = columns.some(c => c.name.toLowerCase() === 'id');\n        if (!hasId) {\n          setMessage('\"ID\" sütunu bulunmuyor, başka dosya seçin.');\n          setExcelColumns([]);\n          setExcelToNotionMappings([]);\n          return;\n        }\n        setExcelColumns(columns);\n        setExcelToNotionMappings(columns.map(c => ({\n          excel_column: c.name,\n          notion_property: '',\n          data_type: ''\n        })));\n      } else setMessage(`Excel sütunları alınamadı: ${data.error}`);\n    } catch {\n      setMessage('Excel sütunları alınırken ağ hatası oluştu.');\n    }\n  };\n  const fetchNotionProperties = async () => {\n    if (!notionDbId) {\n      setMessage('Lütfen Notion Veritabanı ID\\'si girin.');\n      return;\n    }\n    try {\n      const res = await fetch(`${API_BASE_URL}/get-notion-properties?notion_database_id=${notionDbId}`);\n      const data = await res.json();\n      if (res.ok) {\n        setNotionProperties(data.properties);\n        const notionPropNames = data.properties.map(p => p.name.toLowerCase());\n        const unmatched = excelColumns.filter(col => !notionPropNames.includes(col.name.toLowerCase()) && col.name.toLowerCase() !== 'id').map(col => col.name);\n        setUnmatchedColumns(unmatched);\n        setSelectedColumnsToCreate([]);\n        setNotionToExcelMappings(data.properties.map(prop => ({\n          excel_column: '',\n          notion_property: prop.name,\n          data_type: prop.type || ''\n        })));\n        setStep('mapping');\n      } else setMessage(`Notion özellikleri alınamadı: ${data.error}`);\n    } catch {\n      setMessage('Notion özelliklerini alırken ağ hatası oluştu.');\n    }\n  };\n  const handleMappingChange = (leftName, rightName) => {\n    if (syncDirection === 'excel-to-notion') {\n      setExcelToNotionMappings(prev => prev.map(m => {\n        var _notionProperties$fin;\n        return m.excel_column === leftName ? {\n          ...m,\n          notion_property: rightName,\n          data_type: ((_notionProperties$fin = notionProperties.find(p => p.name === rightName)) === null || _notionProperties$fin === void 0 ? void 0 : _notionProperties$fin.type) || ''\n        } : m;\n      }));\n    } else {\n      setNotionToExcelMappings(prev => prev.map(m => m.notion_property === leftName ? {\n        ...m,\n        excel_column: rightName\n      } : m));\n    }\n  };\n  const handleCreateColumnChange = (colName, checked) => {\n    setSelectedColumnsToCreate(prev => checked ? [...prev, colName] : prev.filter(c => c !== colName));\n  };\n  const handleAutoSyncColumnChange = (colName, checked) => {\n    setAutoSyncColumns(prev => checked ? [...prev, colName] : prev.filter(c => c !== colName));\n  };\n  const saveMappings = async () => {\n    if (!userId) {\n      setMessage('Kullanıcı kimliği bulunamadı.');\n      return;\n    }\n    const mappings = syncDirection === 'excel-to-notion' ? excelToNotionMappings : notionToExcelMappings;\n    const validMappings = mappings.filter(m => syncDirection === 'excel-to-notion' ? m.notion_property.trim() !== '' : m.excel_column.trim() !== '');\n    if (validMappings.length === 0) {\n      setMessage(\"En az bir sütunu eşleştirin.\");\n      return;\n    }\n    const idMappingExists = validMappings.some(m => syncDirection === 'excel-to-notion' && m.excel_column.toLowerCase() === 'id' || syncDirection === 'notion-to-excel' && m.notion_property.toLowerCase() === 'id');\n    if (!idMappingExists) {\n      setMessage(\"Senkronizasyon için 'ID' sütununun eşleştirilmesi zorunludur.\");\n      return;\n    }\n    try {\n      const res = await fetch(`${API_BASE_URL}/save-mapping?user_id=${userId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(validMappings)\n      });\n      const data = await res.json();\n      if (res.ok) {\n        const allSavedMappings = data.saved_mappings || [];\n        setMessage(\"Eşleşmeler başarıyla kaydedildi. Senkronizasyon başlatılıyor...\");\n        startSync(syncDirection, allSavedMappings);\n      } else {\n        const err = data;\n        setMessage(`Eşleşmeler kaydedilemedi: ${err.error || err.detail}`);\n      }\n    } catch {\n      setMessage('Eşleşmeleri kaydederken ağ hatası oluştu.');\n    }\n  };\n  const startSync = async (direction, allSavedMappings) => {\n    var _excelFiles$find;\n    if (!userId) {\n      setMessage('Kullanıcı kimliği bulunamadı.');\n      return;\n    }\n    let successMessage = 'Senkronizasyon başarıyla tamamlandı.';\n    const cleanAutoSyncColumnsSet = new Set(autoSyncColumns.map(name => name.toLowerCase().trim()));\n    const autoSyncMappingIds = allSavedMappings.filter(m => {\n      const columnName = direction === 'excel-to-notion' ? m.excel_column : m.notion_property;\n      const cleanBackendName = columnName.toLowerCase().trim();\n      return cleanAutoSyncColumnsSet.has(cleanBackendName);\n    }).map(m => m.id);\n    const autoSyncCreationData = {\n      user_id: parseInt(userId, 10),\n      excel_file_id: selectedExcelId,\n      excel_file_name: ((_excelFiles$find = excelFiles.find(f => f.id === selectedExcelId)) === null || _excelFiles$find === void 0 ? void 0 : _excelFiles$find.name) || '',\n      notion_database_id: notionDbId,\n      direction: direction,\n      interval_minutes: 60,\n      mapping_ids: autoSyncMappingIds,\n      excel_worksheet_name: selectedWorksheetName\n    };\n    try {\n      // 1. MANUEL SENKRONİZASYONU BAŞLAT\n      const res = await fetch(`${API_BASE_URL}/sync/${direction}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          excel_file_id: selectedExcelId,\n          notion_database_id: notionDbId,\n          user_id: parseInt(userId, 10),\n          excel_worksheet_name: selectedWorksheetName,\n          columns_to_create: direction === 'excel-to-notion' ? selectedColumnsToCreate : []\n        })\n      });\n      if (!res.ok) {\n        const err = await res.json();\n        throw new Error(`Manuel Senkronizasyon başarısız: ${err.detail || err.error}`);\n      }\n\n      // 2. OTOMATİK SYNC KONFİGÜRASYONUNU OLUŞTUR\n      if (autoSyncToggle && autoSyncMappingIds.length > 0) {\n        const autoSyncRes = await fetch(`${API_BASE_URL}/autosync/create`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(autoSyncCreationData)\n        });\n        const autoSyncData = await autoSyncRes.json();\n        if (!autoSyncRes.ok) {\n          successMessage += ` Ancak Otomatik Sync yapılandırılamadı: ${autoSyncData.detail || 'Bilinmeyen Hata'}`;\n        } else {\n          successMessage = `Manuel senkronizasyon tamamlandı ve Otomatik Sync yapılandırıldı. (${autoSyncData.message})`;\n        }\n      }\n      setStep('complete');\n      setMessage(successMessage);\n    } catch (e) {\n      setMessage(`Senkronizasyon İşlemi Sırasında Hata: ${e.message || e.toString()}`);\n    }\n  };\n  const renderConnectStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ad\\u0131m 1: Microsoft Hesab\\u0131n\\u0131 Ba\\u011Fla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Devam etmek i\\xE7in OneDrive/Excel hesab\\u0131n\\u0131za eri\\u015Fim izni vermelisiniz.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"primary-btn\",\n      onClick: handleMicrosoftConnect,\n      children: \"Microsoft Hesab\\u0131n\\u0131 Ba\\u011Fla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 5\n  }, this);\n  const handleNotionConnect = () => {\n    // Backend'deki /connect/notion endpoint'ine yönlendiriyoruz\n    window.location.href = `${API_BASE_URL}/connect/notion?user_id=${userId}`;\n  };\n  const renderNotionConnectStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ad\\u0131m 2: Notion Hesab\\u0131n\\u0131 Ba\\u011Fla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Senkronizasyonun \\xE7al\\u0131\\u015Fmas\\u0131 i\\xE7in Notion API anahtar\\u0131n\\u0131z\\u0131 ba\\u011Flaman\\u0131z gerekiyor. L\\xFCtfen t\\xFCm veritabanlar\\u0131n\\u0131z i\\xE7in izin verdi\\u011Finizden emin olun.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"primary-btn\",\n      onClick: handleNotionConnect,\n      disabled: !userId,\n      children: \"Notion Hesab\\u0131n\\u0131 Ba\\u011Fla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 419,\n    columnNumber: 7\n  }, this);\n  const renderSelectStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ad\\u0131m 3: Dosya Se\\xE7imi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"step-description\",\n      children: \"L\\xFCtfen senkronize etmek istedi\\u011Finiz Excel dosyas\\u0131n\\u0131/sayfas\\u0131n\\u0131 ve Notion Veritaban\\u0131 ID'sini girin.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-step-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `selection-card ${selectedExcelId ? 'is-selected' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"1. Excel Dosyas\\u0131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"OneDrive Dosyas\\u0131 Se\\xE7in:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedExcelId,\n            onChange: e => {\n              setSelectedExcelId(e.target.value);\n              if (e.target.value) {\n                // Dosya seçildiğinde sayfaları getir\n                fetchExcelWorksheets(e.target.value, userId);\n                setSelectedWorksheetName('');\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Dosya Se\\xE7iniz...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 27\n            }, this), excelFiles.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: f.id,\n              children: f.name\n            }, f.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 48\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `selection-card ${selectedWorksheetName ? 'is-selected' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"2. \\xC7al\\u0131\\u015Fma Sayfas\\u0131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-hint\",\n          children: \"Dosyan\\u0131n hangi sayfas\\u0131n\\u0131 sync edece\\u011Finizi se\\xE7in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 19\n        }, this), selectedExcelId ? excelWorksheets.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Sayfa Se\\xE7in:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedWorksheetName,\n            onChange: e => {\n              setSelectedWorksheetName(e.target.value);\n              // Sayfa seçildiğinde sütunları getir\n              fetchExcelColumns(selectedExcelId, e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Sayfa Se\\xE7iniz...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 35\n            }, this), excelWorksheets.map(ws => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: ws.name,\n              children: ws.name\n            }, ws.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 62\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading-state\",\n          children: \"Sayfalar y\\xFCkleniyor...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"disabled-state\",\n          children: \"\\xD6nce Excel dosyas\\u0131n\\u0131 se\\xE7in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `selection-card notion-card ${notionDbId ? 'is-selected' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"3. Notion Veritaban\\u0131 ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-hint\",\n          children: \"Notion veritaban\\u0131 URL'sinden ID'yi kopyalay\\u0131p yap\\u0131\\u015Ft\\u0131r\\u0131n.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Veritaban\\u0131 ID'si:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: notionDbId,\n            onChange: e => setNotionDbId(e.target.value),\n            placeholder: \"Veritaban\\u0131 ID'sini yap\\u0131\\u015Ft\\u0131r\\u0131n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-lg\",\n        onClick: fetchNotionProperties,\n        disabled: !selectedExcelId || !selectedWorksheetName || !notionDbId,\n        children: \"Notion \\xD6zelliklerini Getir ve E\\u015Fle\\u015Ftirmeye Ge\\xE7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 430,\n    columnNumber: 7\n  }, this);\n  const renderMappingStep = () => {\n    var _mappings$find, _mappings$find2;\n    const leftItems = syncDirection === 'excel-to-notion' ? excelColumns : notionProperties;\n    const rightItems = syncDirection === 'excel-to-notion' ? notionProperties : excelColumns;\n    const mappings = syncDirection === 'excel-to-notion' ? excelToNotionMappings : notionToExcelMappings;\n\n    // ID sütununu dışarıda tutarak haritalama listesini oluştur\n    const mappableLeftItems = leftItems.filter(item => item.name.toLowerCase() !== 'id');\n    const idMapping = leftItems.find(item => item.name.toLowerCase() === 'id');\n\n    // Eğer ID sütunu bulunamıyorsa veya mapping yoksa bir uyarı göster\n    if (!idMapping) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: 'red'\n          },\n          children: \"HATA!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Senkronizasyonun \\xE7al\\u0131\\u015Fmas\\u0131 i\\xE7in Excel dosyas\\u0131nda bir \\\"ID\\\" s\\xFCtunu zorunludur. L\\xFCtfen dosyan\\u0131z\\u0131 kontrol edin veya yeni bir dosya se\\xE7in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"secondary-btn\",\n          onClick: () => setStep('select'),\n          children: \"Geri Git\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 15\n      }, this);\n    }\n\n    // ID sütunu için Notion tarafında eşleşme aranacak\n    const idSelectedRight = idMapping ? syncDirection === 'excel-to-notion' ? (_mappings$find = mappings.find(m => m.excel_column.toLowerCase() === 'id')) === null || _mappings$find === void 0 ? void 0 : _mappings$find.notion_property : (_mappings$find2 = mappings.find(m => m.notion_property.toLowerCase() === 'id')) === null || _mappings$find2 === void 0 ? void 0 : _mappings$find2.excel_column : '';\n\n    // Sadece ID sütunu için özel bir uyarı\n    if (!idSelectedRight) {\n      setMessage(\"Lütfen 'ID' sütununu karşı tarafta da eşleştirmeyi unutmayın.\");\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ad\\u0131m 4: S\\xFCtunlar\\u0131 E\\u015Fle\\u015Ftirin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapping-control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn-toggle ${syncDirection === 'excel-to-notion' ? 'active' : ''}`,\n            onClick: () => setSyncDirection('excel-to-notion'),\n            children: [\"Excel \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"arrow\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 33\n            }, this), \" Notion\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn-toggle ${syncDirection === 'notion-to-excel' ? 'active' : ''}`,\n            onClick: () => setSyncDirection('notion-to-excel'),\n            children: [\"Notion \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"arrow\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 34\n            }, this), \" Excel\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"auto-sync-toggle-global\",\n          children: [\"Otomatik Sync'i A\\xE7\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: autoSyncToggle,\n            onChange: e => setAutoSyncToggle(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"step-description\",\n        children: \"Senkronize etmek istedi\\u011Finiz her bir s\\xFCtunu kar\\u015F\\u0131 taraftaki uygun s\\xFCtunla e\\u015Fle\\u015Ftirin.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapping-list-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mapping-list-left-title\",\n          children: syncDirection === 'excel-to-notion' ? 'EXCEL SÜTUNLARI' : 'NOTION ÖZELLİKLERİ'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mapping-list-right-title\",\n          children: \"E\\u015ELE\\u015ET\\u0130R\\u0130LEN S\\xDCTUN / \\xD6ZELL\\u0130K\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mapping-list-autosync-title\",\n          children: \"OTOMAT\\u0130K SYNC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapping-list-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mapping-row mapping-row-critical\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mapping-left\",\n            children: \"ID (Kritik E\\u015Fle\\u015Fme)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mapping-right\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: idSelectedRight || '',\n              onChange: e => handleMappingChange(idMapping.name, e.target.value)\n              // ID eşleşmesi her zaman olmalı\n              ,\n              style: {\n                backgroundColor: idSelectedRight ? '#e6fff0' : '#ffe6e6'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Se\\xE7iniz...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 31\n              }, this), rightItems.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: p.name,\n                children: p.name\n              }, p.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 35\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mapping-autosync\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-text\",\n              children: \"Zorunlu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 19\n        }, this), mappableLeftItems.map(item => {\n          const leftName = item.name;\n          const mapping = mappings.find(m => syncDirection === 'excel-to-notion' ? m.excel_column === leftName : m.notion_property === leftName) || {\n            excel_column: '',\n            notion_property: '',\n            data_type: ''\n          };\n          const selectedRight = syncDirection === 'excel-to-notion' ? mapping.notion_property : mapping.excel_column;\n          const isAutoSynced = autoSyncColumns.includes(leftName);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mapping-row ${selectedRight ? 'is-mapped' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mapping-left\",\n              children: leftName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mapping-right\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedRight || '',\n                onChange: e => handleMappingChange(leftName, e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"E\\u015Fle\\u015Ftirme Yapma\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 39\n                }, this), rightItems.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p.name,\n                  children: syncDirection === 'excel-to-notion' && 'type' in p && p.type ? `${p.name} (${p.type})` : p.name\n                }, p.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 43\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mapping-autosync\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"auto-sync-checkbox-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  disabled: !autoSyncToggle || !selectedRight // Global kapalıysa veya eşleşme yapılmadıysa devre dışı\n                  ,\n                  checked: isAutoSynced,\n                  onChange: e => handleAutoSyncColumnChange(leftName, e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 39\n                }, this), isAutoSynced ? 'Açık' : 'Kapalı']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 31\n            }, this)]\n          }, leftName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 27\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 15\n      }, this), syncDirection === 'excel-to-notion' && unmatchedColumns.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unmatched-columns-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notion'da Olmayan Excel S\\xFCtunlar\\u0131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bu s\\xFCtunlar\\u0131, Notion'da yeni \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Zengin Metin (Rich Text)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 55\n          }, this), \" \\xF6zelli\\u011Fi olarak eklemek i\\xE7in i\\u015Faretleyin:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-creation-options\",\n          children: unmatchedColumns.map(c => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedColumnsToCreate.includes(c),\n              onChange: e => handleCreateColumnChange(c, e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 35\n            }, this), c]\n          }, c, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sync-buttons step-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-lg\",\n          onClick: saveMappings,\n          disabled: !idSelectedRight,\n          children: \"Senkronizasyonu Ba\\u015Flat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 11\n    }, this);\n  };\n  const renderCompleteStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Senkr. Tamamland\\u0131!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"primary-btn\",\n      onClick: () => setStep('select'),\n      children: \"Yeni Senkronizasyon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"secondary-btn\",\n      onClick: () => setStep('dashboard'),\n      style: {\n        marginLeft: '10px'\n      },\n      children: \"Dashboard'a Git\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 698,\n    columnNumber: 5\n  }, this);\n  const renderConnectStepHomeOrApp = () => {\n    // Yasal sayfalar\n    if (step === 'privacy') {\n      return /*#__PURE__*/_jsxDEV(PrivacyPolicy, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 16\n      }, this);\n    }\n    if (step === 'terms') {\n      return /*#__PURE__*/_jsxDEV(TermsAndConditions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 16\n      }, this);\n    }\n    if (step === 'home') {\n      return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 16\n      }, this);\n    }\n\n    // Diğer uygulama adımları\n    switch (step) {\n      case 'connect':\n        return renderConnectStep();\n      case 'notion_connect':\n        return renderNotionConnectStep();\n      case 'select':\n        return renderSelectStep();\n      case 'mapping':\n        return renderMappingStep();\n      case 'complete':\n        return renderCompleteStep();\n      case 'dashboard':\n        return /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 22\n        }, this);\n      case 'profile':\n        // YENİ EKLENTİ\n        return /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 24\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {\n      setStep: setStep,\n      userEmail: userEmail // <-- Bu satır ekli mi?\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 9\n    }, this), step !== 'home' && step !== 'privacy' && step !== 'terms' && /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-content-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          padding: '10px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"NotiXel Synchronization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 19\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons-group\",\n          children: [step !== 'dashboard' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setStep('dashboard'),\n            className: \"secondary-btn\",\n            style: {\n              marginRight: '10px'\n            },\n            children: \"Auto Sync Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 27\n          }, this), (step === 'dashboard' || step === 'complete') && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setStep('connect'),\n            className: \"btn btn-primary\",\n            children: \"\\u2795 Yeni Sync Olu\\u015Ftur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: renderConnectStepHomeOrApp()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterComponent, {\n      setStep: setStep\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 742,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7rNOTdrwFJBkYcjBrAXUeTMvkag=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Dashboard","Home","PrivacyPolicy","TermsAndConditions","HeaderComponent","FooterComponent","Profile","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","initialUserId","localStorage","getItem","initialStep","step","setStep","userEmail","setUserEmail","syncDirection","setSyncDirection","autoSyncToggle","setAutoSyncToggle","excelFiles","setExcelFiles","excelColumns","setExcelColumns","notionProperties","setNotionProperties","selectedExcelId","setSelectedExcelId","excelWorksheets","setExcelWorksheets","selectedWorksheetName","setSelectedWorksheetName","notionDbId","setNotionDbId","message","setMessage","userId","setUserId","excelToNotionMappings","setExcelToNotionMappings","notionToExcelMappings","setNotionToExcelMappings","unmatchedColumns","setUnmatchedColumns","selectedColumnsToCreate","setSelectedColumnsToCreate","autoSyncColumns","setAutoSyncColumns","params","URLSearchParams","window","location","search","receivedUserId","get","notionAuthSuccess","notionAuthError","authSuccess","initializeApp","id","isNewLogin","setItem","hasNotionKey","checkNotionStatus","fetchExcelFiles","currentId","history","replaceState","pathname","storedUserId","fetchExcelWorksheets","fileId","currentUserId","res","fetch","data","json","ok","worksheets","map","name","length","fetchExcelColumns","error","handleMicrosoftConnect","href","has_notion_key","files","worksheetName","columns","hasId","some","c","toLowerCase","excel_column","notion_property","data_type","fetchNotionProperties","properties","notionPropNames","p","unmatched","filter","col","includes","prop","type","handleMappingChange","leftName","rightName","prev","m","_notionProperties$fin","find","handleCreateColumnChange","colName","checked","handleAutoSyncColumnChange","saveMappings","mappings","validMappings","trim","idMappingExists","method","headers","body","JSON","stringify","allSavedMappings","saved_mappings","startSync","err","detail","direction","_excelFiles$find","successMessage","cleanAutoSyncColumnsSet","Set","autoSyncMappingIds","columnName","cleanBackendName","has","autoSyncCreationData","user_id","parseInt","excel_file_id","excel_file_name","f","notion_database_id","interval_minutes","mapping_ids","excel_worksheet_name","columns_to_create","Error","autoSyncRes","autoSyncData","e","toString","renderConnectStep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleNotionConnect","renderNotionConnectStep","disabled","renderSelectStep","value","onChange","target","ws","placeholder","renderMappingStep","_mappings$find","_mappings$find2","leftItems","rightItems","mappableLeftItems","item","idMapping","style","color","idSelectedRight","backgroundColor","mapping","selectedRight","isAutoSynced","renderCompleteStep","marginLeft","renderConnectStepHomeOrApp","display","justifyContent","alignItems","padding","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/Taha/Desktop/notion-excel-sync/excel-notion-ui/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Dashboard from './AutoSyncDashboard';\nimport Home from './Home'; // Yeni Home bileşenini import ediyoruz!\nimport PrivacyPolicy from './PrivacyPolicy';\nimport TermsAndConditions from './TermsAndConditions';\n// YENİ İMPORTLAR\nimport HeaderComponent from './HeaderComponent'; \nimport FooterComponent from './FooterComponent'; \nimport Profile from './Profile';\n\n// 'home' adımını AppStep türüne ekliyoruz\n// YENİ TİP EKLENTİLERİ: 'privacy' ve 'terms' eklendi\ntype AppStep = 'home' | 'connect' | 'notion_connect'| 'select' | 'mapping' | 'complete' | 'dashboard' | 'privacy' | 'terms' | 'profile';\ntype ExcelFile = { id: string; name: string };\ntype ExcelColumn = { name: string };\ntype NotionProperty = { name: string; type?: string };\ntype Mapping = { excel_column: string; notion_property: string; data_type: string };\ntype ExcelWorksheet = { name: string };\n\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\nfunction App() {\n  // Başlangıç adımını, localStorage'daki user_id'ye göre belirliyoruz.\n  const initialUserId = localStorage.getItem('user_id');\n  // ID varsa 'connect' adımında başla, yoksa 'home' (giriş) sayfasında başla.\n  const initialStep: AppStep = initialUserId ? 'connect' : 'home';\n  \n  const [step, setStep] = useState<AppStep>(initialStep);\n  const [userEmail, setUserEmail] = useState<string | null>(localStorage.getItem('user_email'));\n  const [syncDirection, setSyncDirection] = useState<'excel-to-notion' | 'notion-to-excel'>('excel-to-notion');\n  const [autoSyncToggle, setAutoSyncToggle] = useState(false);\n  const [excelFiles, setExcelFiles] = useState<ExcelFile[]>([]);\n  const [excelColumns, setExcelColumns] = useState<ExcelColumn[]>([]);\n  const [notionProperties, setNotionProperties] = useState<NotionProperty[]>([]);\n  const [selectedExcelId, setSelectedExcelId] = useState<string>('');\n  const [excelWorksheets, setExcelWorksheets] = useState<ExcelWorksheet[]>([]); // Yeni\n  const [selectedWorksheetName, setSelectedWorksheetName] = useState<string>(''); // Yeni\n  const [notionDbId, setNotionDbId] = useState<string>('');\n  const [message, setMessage] = useState<string>('');\n  const [userId, setUserId] = useState<string | null>(initialUserId); // initialUserId'yi kullanıyoruz\n\n  const [excelToNotionMappings, setExcelToNotionMappings] = useState<Mapping[]>([]);\n  const [notionToExcelMappings, setNotionToExcelMappings] = useState<Mapping[]>([]);\n  \n  const [unmatchedColumns, setUnmatchedColumns] = useState<string[]>([]);\n  const [selectedColumnsToCreate, setSelectedColumnsToCreate] = useState<string[]>([]);\n  \n  const [autoSyncColumns, setAutoSyncColumns] = useState<string[]>([]);\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const receivedUserId = params.get('user_id');\n    const notionAuthSuccess = params.get('notion_auth_success') === 'true';\n    const notionAuthError = params.get('notion_auth_error') === 'true';\n    const authSuccess = params.get('auth_success') === 'true';\n\n    // Helper: Kullanıcı verilerini kaydeder ve Notion bağlantısını kontrol eder.\n    const initializeApp = async (id: string, isNewLogin: boolean) => {\n        setUserId(id);\n        localStorage.setItem('user_id', id);\n\n        const hasNotionKey = await checkNotionStatus(id);\n\n        if (!hasNotionKey) {\n            setStep('notion_connect');\n            if (isNewLogin) setMessage('Microsoft bağlantısı başarılı. Şimdi Notion hesabınızı bağlayın.');\n        } else {\n            setStep('select');\n            fetchExcelFiles(id);\n            if (isNewLogin) setMessage('Bağlantılar tamam! Excel dosyanızı seçin.');\n        }\n    };\n    \n    // --- 1. Notion Callback Handling (Notion'dan döndüğünde) ---\n    if (notionAuthSuccess) {\n        const currentId = localStorage.getItem('user_id');\n        if (currentId) {\n            setStep('select');\n            fetchExcelFiles(currentId);\n            setMessage('Notion bağlantısı başarılı! Şimdi bir dosya seçin.');\n        } else {\n            setMessage('Hata: Notion bağlantısı başarılı ancak kullanıcı ID kayıp.');\n            setStep('home');\n        }\n        window.history.replaceState(null, '', window.location.pathname);\n        return;\n    }\n    \n    if (notionAuthError) {\n         setMessage(`Notion bağlantı hatası: ${params.get('message') || 'Bilinmeyen hata.'}`);\n         setStep('notion_connect'); \n         window.history.replaceState(null, '', window.location.pathname);\n         return;\n    }\n\n    // --- 2. Microsoft Callback Handling (Microsoft'tan döndüğünde) ---\n    if (authSuccess && receivedUserId) {\n        initializeApp(receivedUserId, true);\n        window.history.replaceState(null, '', window.location.pathname);\n        return;\n    }\n    \n    // --- 3. Persistent Session / Initial Load Handling ---\n    const storedUserId = localStorage.getItem('user_id');\n    // Eğer localStorage'da ID varsa ve mevcut adım 'home' değilse (yani oturum açma akışına girmişse)\n    if (storedUserId && step !== 'home') {\n         initializeApp(storedUserId, false);\n         return;\n    }\n\n    // --- 4. Default: Show Home Page ---\n    // Eğer hiçbir şey tetiklenmediyse ve ID yoksa, Home'u göster.\n    if (!storedUserId) {\n        setStep('home');\n    }\n    \n  }, []); \n\n\n  // ... (Tüm fetch ve handler fonksiyonları burada devam eder)\n\n  // 1. Yeni Sayfa Çekme Fonksiyonu\n  const fetchExcelWorksheets = async (fileId: string, currentUserId: string) => {\n    try {\n      // Backend'deki yeni endpoint'i çağırın\n      const res = await fetch(`${API_BASE_URL}/get-excel-worksheets?excel_file_id=${fileId}&user_id=${currentUserId}`);\n      const data = await res.json();\n      if (res.ok) {\n        // Data'nın [\"Sayfa1\", \"Sayfa2\"] formatında geldiğini varsayıyoruz\n        const worksheets = data.worksheets.map((name: string) => ({ name }));\n        setExcelWorksheets(worksheets);\n\n        if (worksheets.length === 1) {\n            // Tek sayfa varsa otomatik seç ve sütunları çek\n            setSelectedWorksheetName(worksheets[0].name);\n            fetchExcelColumns(fileId, worksheets[0].name);\n        } else {\n             // Sütunları temizle ve kullanıcının seçmesini bekle\n             setExcelColumns([]);\n        }\n\n      } else setMessage(`Excel sayfaları alınamadı: ${data.error}`);\n    } catch {\n      setMessage('Excel sayfaları alınırken ağ hatası oluştu.');\n    }\n  };\n\n\n  const handleMicrosoftConnect = () => {\n    window.location.href = `${API_BASE_URL}/connect/microsoft`;\n  };\n\n  const checkNotionStatus = async (currentUserId: string): Promise<boolean> => {\n    // DEV MODE: Notion bağlantısı kontrolü atlanıyor.\n    // return true; // Eğer test amaçlı Notion bağlantısını atlamak isterseniz\n    try {\n        const res = await fetch(`${API_BASE_URL}/check-notion-status?user_id=${currentUserId}`);\n        const data = await res.json();\n        if (res.ok) {\n            // Backend'den { has_notion_key: true/false } şeklinde bir yanıt bekliyoruz.\n            return data.has_notion_key;\n        }\n        return false;\n    } catch {\n        setMessage('Bağlantı kontrolü sırasında ağ hatası oluştu.');\n        return false;\n    }\n  };\n\n  const fetchExcelFiles = async (currentUserId: string) => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/get-excel-files?user_id=${currentUserId}`);\n      const data = await res.json();\n      if (res.ok) setExcelFiles(data.files);\n      else setMessage(`Excel dosyaları alınamadı: ${data.error}`);\n    } catch {\n      setMessage('Excel dosyaları alınırken ağ hatası oluştu.');\n    }\n  };\n\n  const fetchExcelColumns = async (fileId: string, worksheetName: string) => {\n    if (!userId || !worksheetName) return; \n    try {\n      const res = await fetch(`${API_BASE_URL}/get-excel-columns?excel_file_id=${fileId}&worksheet_name=${worksheetName}&user_id=${userId}`);\n      const data = await res.json();\n      if (res.ok) {\n        const columns = data.columns.map((name: string) => ({ name }));\n        const hasId = columns.some((c: ExcelColumn) => c.name.toLowerCase() === 'id');\n        if (!hasId) {\n          setMessage('\"ID\" sütunu bulunmuyor, başka dosya seçin.');\n          setExcelColumns([]);\n          setExcelToNotionMappings([]);\n          return;\n        }\n        setExcelColumns(columns);\n        setExcelToNotionMappings(columns.map((c: ExcelColumn) => ({\n          excel_column: c.name,\n          notion_property: '',\n          data_type: ''\n        })));\n      } else setMessage(`Excel sütunları alınamadı: ${data.error}`);\n    } catch {\n      setMessage('Excel sütunları alınırken ağ hatası oluştu.');\n    }\n  };\n\n  const fetchNotionProperties = async () => {\n    if (!notionDbId) {\n      setMessage('Lütfen Notion Veritabanı ID\\'si girin.');\n      return;\n    }\n    try {\n      const res = await fetch(`${API_BASE_URL}/get-notion-properties?notion_database_id=${notionDbId}`);\n      const data = await res.json();\n      if (res.ok) {\n        setNotionProperties(data.properties);\n\n        const notionPropNames = data.properties.map((p: NotionProperty) => p.name.toLowerCase());\n        const unmatched = excelColumns\n          .filter(col => !notionPropNames.includes(col.name.toLowerCase()) && col.name.toLowerCase() !== 'id')\n          .map(col => col.name);\n        setUnmatchedColumns(unmatched);\n        setSelectedColumnsToCreate([]);\n\n        setNotionToExcelMappings(data.properties.map((prop: NotionProperty) => ({\n          excel_column: '',\n          notion_property: prop.name,\n          data_type: prop.type || ''\n        })));\n\n        setStep('mapping');\n      } else setMessage(`Notion özellikleri alınamadı: ${data.error}`);\n    } catch {\n      setMessage('Notion özelliklerini alırken ağ hatası oluştu.');\n    }\n  };\n\n  const handleMappingChange = (leftName: string, rightName: string) => {\n    if (syncDirection === 'excel-to-notion') {\n      setExcelToNotionMappings(prev =>\n        prev.map(m =>\n          m.excel_column === leftName\n            ? { ...m, notion_property: rightName, data_type: notionProperties.find(p => p.name === rightName)?.type || '' }\n            : m\n        )\n      );\n    } else {\n      setNotionToExcelMappings(prev =>\n        prev.map(m =>\n          m.notion_property === leftName\n            ? { ...m, excel_column: rightName }\n            : m\n        )\n      );\n    }\n  };\n\n  const handleCreateColumnChange = (colName: string, checked: boolean) => {\n    setSelectedColumnsToCreate(prev =>\n      checked ? [...prev, colName] : prev.filter(c => c !== colName)\n    );\n  };\n\n  \n  const handleAutoSyncColumnChange = (colName: string, checked: boolean) => {\n    setAutoSyncColumns(prev =>\n        checked ? [...prev, colName] : prev.filter(c => c !== colName)\n    );\n};\n\n  \n  \n\nconst saveMappings = async () => {\n    if (!userId) { setMessage('Kullanıcı kimliği bulunamadı.'); return; }\n\n    const mappings = syncDirection === 'excel-to-notion' ? excelToNotionMappings : notionToExcelMappings;\n    const validMappings = mappings.filter(m =>\n        syncDirection === 'excel-to-notion' ? m.notion_property.trim() !== '' : m.excel_column.trim() !== ''\n    );\n    \n    if (validMappings.length === 0) { setMessage(\"En az bir sütunu eşleştirin.\"); return; }\n    \n    const idMappingExists = validMappings.some(m => \n        (syncDirection === 'excel-to-notion' && m.excel_column.toLowerCase() === 'id') ||\n        (syncDirection === 'notion-to-excel' && m.notion_property.toLowerCase() === 'id')\n    );\n    \n    if (!idMappingExists) {\n        setMessage(\"Senkronizasyon için 'ID' sütununun eşleştirilmesi zorunludur.\");\n        return;\n    }\n\n    try {\n        const res = await fetch(`${API_BASE_URL}/save-mapping?user_id=${userId}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(validMappings),\n        });\n        \n        const data = await res.json(); \n        \n        if (res.ok) {\n            const allSavedMappings: { id: number, excel_column: string, notion_property: string }[] = data.saved_mappings || []; \n            \n            setMessage(\"Eşleşmeler başarıyla kaydedildi. Senkronizasyon başlatılıyor...\");\n            startSync(syncDirection, allSavedMappings); \n        } else {\n            const err = data;\n            setMessage(`Eşleşmeler kaydedilemedi: ${err.error || err.detail}`);\n        }\n    } catch {\n        setMessage('Eşleşmeleri kaydederken ağ hatası oluştu.');\n    }\n};\n\n\nconst startSync = async (\n    direction: 'excel-to-notion' | 'notion-to-excel',\n    allSavedMappings: { id: number, excel_column: string, notion_property: string }[] \n  ) => {\n    if (!userId) {\n        setMessage('Kullanıcı kimliği bulunamadı.');\n        return;\n    }\n\n    let successMessage = 'Senkronizasyon başarıyla tamamlandı.';\n\n    const cleanAutoSyncColumnsSet = new Set(\n        autoSyncColumns.map(name => name.toLowerCase().trim())\n    );\n\n    const autoSyncMappingIds = allSavedMappings\n        .filter(m => {\n            const columnName = direction === 'excel-to-notion' ? m.excel_column : m.notion_property;\n            const cleanBackendName = columnName.toLowerCase().trim();\n            \n            return cleanAutoSyncColumnsSet.has(cleanBackendName);\n        })\n        .map(m => m.id);\n\n\n    const autoSyncCreationData = {\n        user_id: parseInt(userId, 10),\n        excel_file_id: selectedExcelId,\n        excel_file_name: excelFiles.find(f => f.id === selectedExcelId)?.name || '',\n        notion_database_id: notionDbId,\n        direction: direction,\n        interval_minutes: 60,\n        mapping_ids: autoSyncMappingIds,\n        excel_worksheet_name: selectedWorksheetName, \n    };\n    \n    try {\n        // 1. MANUEL SENKRONİZASYONU BAŞLAT\n        const res = await fetch(`${API_BASE_URL}/sync/${direction}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                 excel_file_id: selectedExcelId,\n                 notion_database_id: notionDbId,\n                 user_id: parseInt(userId, 10),\n                 excel_worksheet_name: selectedWorksheetName,\n                 columns_to_create:\n                     direction === 'excel-to-notion' ? selectedColumnsToCreate : [],\n            }),\n        });\n\n        if (!res.ok) {\n            const err = await res.json();\n            throw new Error(`Manuel Senkronizasyon başarısız: ${err.detail || err.error}`);\n        }\n\n        // 2. OTOMATİK SYNC KONFİGÜRASYONUNU OLUŞTUR\n        if (autoSyncToggle && autoSyncMappingIds.length > 0) { \n            const autoSyncRes = await fetch(`${API_BASE_URL}/autosync/create`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(autoSyncCreationData),\n            });\n\n            const autoSyncData = await autoSyncRes.json();\n\n            if (!autoSyncRes.ok) {\n                successMessage += ` Ancak Otomatik Sync yapılandırılamadı: ${autoSyncData.detail || 'Bilinmeyen Hata'}`;\n            } else {\n                successMessage = `Manuel senkronizasyon tamamlandı ve Otomatik Sync yapılandırıldı. (${autoSyncData.message})`;\n            }\n        }\n\n        setStep('complete');\n        setMessage(successMessage);\n    } catch (e: any) {\n        setMessage(`Senkronizasyon İşlemi Sırasında Hata: ${e.message || e.toString()}`);\n    }\n};\n\n\n\n\n\n\n  const renderConnectStep = () => (\n    <div className=\"step-container\">\n        <h2>Adım 1: Microsoft Hesabını Bağla</h2>\n        <p>Devam etmek için OneDrive/Excel hesabınıza erişim izni vermelisiniz.</p>\n        <button className=\"primary-btn\" onClick={handleMicrosoftConnect}>Microsoft Hesabını Bağla</button>\n    </div>\n  );\n\n  const handleNotionConnect = () => {\n    // Backend'deki /connect/notion endpoint'ine yönlendiriyoruz\n    window.location.href = `${API_BASE_URL}/connect/notion?user_id=${userId}`; \n  };\n\n\n  const renderNotionConnectStep = () => (\n      <div className=\"step-container\">\n          <h2>Adım 2: Notion Hesabını Bağla</h2>\n          <p>Senkronizasyonun çalışması için Notion API anahtarınızı bağlamanız gerekiyor. Lütfen tüm veritabanlarınız için izin verdiğinizden emin olun.</p>\n          <button className=\"primary-btn\" onClick={handleNotionConnect} disabled={!userId}>\n              Notion Hesabını Bağla\n          </button>\n      </div>\n  );\n\n  \n  const renderSelectStep = () => (\n      <div className=\"step-container\">\n          <h2>Adım 3: Dosya Seçimi</h2>\n          <p className=\"step-description\">Lütfen senkronize etmek istediğiniz Excel dosyasını/sayfasını ve Notion Veritabanı ID'sini girin.</p>\n\n          <div className=\"select-step-grid\">\n              {/* 1. EXCEL DOSYA SEÇİM KARTI */}\n              <div className={`selection-card ${selectedExcelId ? 'is-selected' : ''}`}>\n                  <h3>1. Excel Dosyası</h3>\n                  <div className=\"field\">\n                      <label>OneDrive Dosyası Seçin:</label>\n                      <select \n                          value={selectedExcelId} \n                          onChange={e => { \n                              setSelectedExcelId(e.target.value); \n                              if (e.target.value) {\n                                  // Dosya seçildiğinde sayfaları getir\n                                  fetchExcelWorksheets(e.target.value, userId!);\n                                  setSelectedWorksheetName(''); \n                              }\n                          }}\n                      >\n                          <option value=\"\">Dosya Seçiniz...</option>\n                          {excelFiles.map(f => <option key={f.id} value={f.id}>{f.name}</option>)}\n                      </select>\n                  </div>\n              </div>\n              \n              {/* 2. EXCEL ÇALIŞMA SAYFASI SEÇİM KARTI */}\n              <div className={`selection-card ${selectedWorksheetName ? 'is-selected' : ''}`}>\n                  <h3>2. Çalışma Sayfası</h3>\n                  <p className=\"card-hint\">Dosyanın hangi sayfasını sync edeceğinizi seçin.</p>\n                  {selectedExcelId ? (\n                      excelWorksheets.length > 0 ? (\n                          <div className=\"field\">\n                              <label>Sayfa Seçin:</label>\n                              <select \n                                  value={selectedWorksheetName} \n                                  onChange={e => { \n                                      setSelectedWorksheetName(e.target.value); \n                                      // Sayfa seçildiğinde sütunları getir\n                                      fetchExcelColumns(selectedExcelId, e.target.value);\n                                  }}\n                              >\n                                  <option value=\"\">Sayfa Seçiniz...</option>\n                                  {excelWorksheets.map(ws => <option key={ws.name} value={ws.name}>{ws.name}</option>)}\n                              </select>\n                          </div>\n                      ) : (\n                          <p className=\"loading-state\">Sayfalar yükleniyor...</p>\n                      )\n                  ) : (\n                      <p className=\"disabled-state\">Önce Excel dosyasını seçin.</p>\n                  )}\n              </div>\n\n              {/* 3. NOTION ID GİRİŞ KARTI */}\n              <div className={`selection-card notion-card ${notionDbId ? 'is-selected' : ''}`}>\n                  <h3>3. Notion Veritabanı ID</h3>\n                  <p className=\"card-hint\">Notion veritabanı URL'sinden ID'yi kopyalayıp yapıştırın.</p>\n                  <div className=\"field\">\n                      <label>Veritabanı ID'si:</label>\n                      <input \n                          type=\"text\" \n                          value={notionDbId} \n                          onChange={e => setNotionDbId(e.target.value)} \n                          placeholder=\"Veritabanı ID'sini yapıştırın\" \n                      />\n                  </div>\n              </div>\n          </div>\n\n          {/* Aksiyon Butonu */}\n          <div className=\"step-actions\">\n              <button \n                  className=\"btn btn-primary btn-lg\" \n                  onClick={fetchNotionProperties} \n                  disabled={!selectedExcelId || !selectedWorksheetName || !notionDbId}>\n                  Notion Özelliklerini Getir ve Eşleştirmeye Geç\n              </button>\n          </div>\n      </div>\n  );\n\n\n  \n  const renderMappingStep = () => {\n      const leftItems = syncDirection === 'excel-to-notion' ? excelColumns : notionProperties;\n      const rightItems = syncDirection === 'excel-to-notion' ? notionProperties : excelColumns;\n      const mappings = syncDirection === 'excel-to-notion' ? excelToNotionMappings : notionToExcelMappings;\n\n      // ID sütununu dışarıda tutarak haritalama listesini oluştur\n      const mappableLeftItems = leftItems.filter(item => item.name.toLowerCase() !== 'id');\n      const idMapping = leftItems.find(item => item.name.toLowerCase() === 'id');\n\n\n      // Eğer ID sütunu bulunamıyorsa veya mapping yoksa bir uyarı göster\n      if (!idMapping) {\n          return (\n              <div className=\"step-container\">\n                  <h2 style={{color: 'red'}}>HATA!</h2>\n                  <p>Senkronizasyonun çalışması için Excel dosyasında bir \"ID\" sütunu zorunludur. Lütfen dosyanızı kontrol edin veya yeni bir dosya seçin.</p>\n                  <button className=\"secondary-btn\" onClick={() => setStep('select')}>Geri Git</button>\n              </div>\n          );\n      }\n      \n      // ID sütunu için Notion tarafında eşleşme aranacak\n      const idSelectedRight = \n          idMapping ? (syncDirection === 'excel-to-notion' \n              ? mappings.find(m => m.excel_column.toLowerCase() === 'id')?.notion_property \n              : mappings.find(m => m.notion_property.toLowerCase() === 'id')?.excel_column\n          ) : '';\n      \n      // Sadece ID sütunu için özel bir uyarı\n      if (!idSelectedRight) {\n          setMessage(\"Lütfen 'ID' sütununu karşı tarafta da eşleştirmeyi unutmayın.\");\n      }\n\n\n      return (\n          <div className=\"step-container\">\n              <h2>Adım 4: Sütunları Eşleştirin</h2>\n\n              {/* YÖN VE GLOBAL AYARLAR */}\n              <div className=\"mapping-control-panel\">\n                  <div className=\"toggle-buttons\">\n                      <button\n                          className={`btn-toggle ${syncDirection === 'excel-to-notion' ? 'active' : ''}`}\n                          onClick={() => setSyncDirection('excel-to-notion')}\n                      >\n                          Excel <span className=\"arrow\">→</span> Notion\n                      </button>\n                      <button\n                          className={`btn-toggle ${syncDirection === 'notion-to-excel' ? 'active' : ''}`}\n                          onClick={() => setSyncDirection('notion-to-excel')}\n                      >\n                          Notion <span className=\"arrow\">→</span> Excel\n                      </button>\n                  </div>\n\n                  <label className=\"auto-sync-toggle-global\">\n                      Otomatik Sync'i Aç\n                      <input\n                          type=\"checkbox\"\n                          checked={autoSyncToggle}\n                          onChange={e => setAutoSyncToggle(e.target.checked)}\n                      />\n                  </label>\n              </div>\n              {/* YÖN VE GLOBAL AYARLAR SONU */}\n              \n              <p className=\"step-description\">\n                  Senkronize etmek istediğiniz her bir sütunu karşı taraftaki uygun sütunla eşleştirin.\n              </p>\n\n              <div className=\"mapping-list-header\">\n                  <div className=\"mapping-list-left-title\">{syncDirection === 'excel-to-notion' ? 'EXCEL SÜTUNLARI' : 'NOTION ÖZELLİKLERİ'}</div>\n                  <div className=\"mapping-list-right-title\">EŞLEŞTİRİLEN SÜTUN / ÖZELLİK</div>\n                  <div className=\"mapping-list-autosync-title\">OTOMATİK SYNC</div>\n              </div>\n\n              <div className=\"mapping-list-body\">\n                  {/* 1. KRİTİK ID SÜTUNU (Zorunlu ve Sabit) */}\n                  <div className=\"mapping-row mapping-row-critical\">\n                      <div className=\"mapping-left\">ID (Kritik Eşleşme)</div>\n                      <div className=\"mapping-right\">\n                          <select\n                              value={idSelectedRight || ''}\n                              onChange={e => handleMappingChange(idMapping.name, e.target.value)}\n                              // ID eşleşmesi her zaman olmalı\n                              style={{ backgroundColor: idSelectedRight ? '#e6fff0' : '#ffe6e6' }}\n                          >\n                              <option value=\"\">Seçiniz...</option>\n                              {rightItems.map(p => (\n                                  <option key={p.name} value={p.name}>\n                                      {p.name}\n                                  </option>\n                              ))}\n                          </select>\n                      </div>\n                      <div className=\"mapping-autosync\">\n                          <span className=\"info-text\">Zorunlu</span>\n                      </div>\n                  </div>\n\n                  {/* 2. DİĞER EŞLEŞTİRMELER */}\n                  {mappableLeftItems.map(item => {\n                      const leftName = item.name;\n                      const mapping = mappings.find(m => \n                          syncDirection === 'excel-to-notion' \n                              ? m.excel_column === leftName \n                              : m.notion_property === leftName\n                      ) || { excel_column: '', notion_property: '', data_type: '' };\n                      \n                      const selectedRight =\n                          syncDirection === 'excel-to-notion' ? mapping.notion_property : mapping.excel_column;\n                      \n                      const isAutoSynced = autoSyncColumns.includes(leftName);\n                      \n                      return (\n                          <div className={`mapping-row ${selectedRight ? 'is-mapped' : ''}`} key={leftName}>\n                              <div className=\"mapping-left\">{leftName}</div>\n                              <div className=\"mapping-right\">\n                                  <select\n                                      value={selectedRight || ''}\n                                      onChange={e => handleMappingChange(leftName, e.target.value)}\n                                  >\n                                      <option value=\"\">Eşleştirme Yapma</option>\n                                      {rightItems.map(p => (\n                                          <option key={p.name} value={p.name}>\n                                              {syncDirection === 'excel-to-notion' && 'type' in p && p.type\n                                                  ? `${p.name} (${p.type})`\n                                                  : p.name}\n                                          </option>\n                                      ))}\n                                  </select>\n                              </div>\n                              <div className=\"mapping-autosync\">\n                                  <label className=\"auto-sync-checkbox-label\">\n                                      <input\n                                          type=\"checkbox\"\n                                          disabled={!autoSyncToggle || !selectedRight} // Global kapalıysa veya eşleşme yapılmadıysa devre dışı\n                                          checked={isAutoSynced}\n                                          onChange={e => handleAutoSyncColumnChange(leftName, e.target.checked)}\n                                      />\n                                      {isAutoSynced ? 'Açık' : 'Kapalı'}\n                                  </label>\n                              </div>\n                          </div>\n                      );\n                  })}\n              </div>\n              \n              {/* 3. NOTION'DA OLMAYAN SÜTUNLARI OLUŞTURMA */}\n              {syncDirection === 'excel-to-notion' && unmatchedColumns.length > 0 && (\n                  <div className=\"unmatched-columns-card\">\n                      <h3>Notion'da Olmayan Excel Sütunları</h3>\n                      <p>Bu sütunları, Notion'da yeni <strong>Zengin Metin (Rich Text)</strong> özelliği olarak eklemek için işaretleyin:</p>\n                      <div className=\"column-creation-options\">\n                          {unmatchedColumns.map(c => (\n                              <label key={c} className=\"checkbox-label\">\n                                  <input\n                                      type=\"checkbox\"\n                                      checked={selectedColumnsToCreate.includes(c)}\n                                      onChange={e => handleCreateColumnChange(c, e.target.checked)}\n                                  />\n                                  {c}\n                              </label>\n                          ))}\n                      </div>\n                  </div>\n              )}\n\n              {/* 4. SENKRONİZASYONU BAŞLAT BUTONU */}\n              <div className=\"sync-buttons step-actions\">\n                  <button\n                      className=\"btn btn-primary btn-lg\"\n                      onClick={saveMappings}\n                      disabled={!idSelectedRight}\n                  >\n                      Senkronizasyonu Başlat\n                  </button>\n              </div>\n          </div>\n      );\n  };\n\n  const renderCompleteStep = () => (\n    <div className=\"step-container\">\n      <h2>Senkr. Tamamlandı!</h2>\n      <p>{message}</p>\n      <button className=\"primary-btn\" onClick={() => setStep('select')}>Yeni Senkronizasyon</button>\n      <button className=\"secondary-btn\" onClick={() => setStep('dashboard')} style={{marginLeft: '10px'}}>Dashboard'a Git</button>\n    </div>\n  );\n  \n  const renderConnectStepHomeOrApp = () => {\n      // Yasal sayfalar\n      if (step === 'privacy') {\n        return <PrivacyPolicy />;\n    }\n    if (step === 'terms') {\n        return <TermsAndConditions />;\n    }\n\n    if (step === 'home') {\n        return <Home />;\n    }\n      \n      // Diğer uygulama adımları\n      switch (step) {\n          case 'connect':\n              return renderConnectStep();\n          case 'notion_connect':\n              return renderNotionConnectStep();\n          case 'select':\n              return renderSelectStep();\n          case 'mapping':\n              return renderMappingStep();\n          case 'complete':\n              return renderCompleteStep();\n          case 'dashboard':\n              return <Dashboard />;\n          case 'profile': // YENİ EKLENTİ\n                return <Profile />;    \n          default:\n              return null;\n      }\n  }\n\n\n  return (\n    <div className=\"App\">\n        {/* 🚨 KRİTİK EKSİK 2: userEmail prop'u Header'a iletilmeli */}\n        <HeaderComponent \n            setStep={setStep} \n            userEmail={userEmail} // <-- Bu satır ekli mi?\n        /> \n\n        {/* 🚨 UYGULAMA İÇİ BAŞLIK: Yasal veya Ana Sayfa değilse gösterilir */}\n        {step !== 'home' && step !== 'privacy' && step !== 'terms' && (\n            <header className=\"app-content-header\"> \n                <div className=\"container\" style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '10px 0'}}>\n                  <h1>NotiXel Synchronization</h1>\n                  {message && <div className=\"message\">{message}</div>}\n\n                  {/* --- YENİ SYNC BUTONLARI --- */}\n                  <div className=\"action-buttons-group\">\n                      {/* Yeni Sync Butonu: Dashboard'da değilsek görünür */}\n                      {step !== 'dashboard' && (\n                          <button onClick={() => setStep('dashboard')} className=\"secondary-btn\" style={{ marginRight: '10px' }}>\n                              Auto Sync Dashboard\n                          </button>\n                      )}\n                      \n                      {/* Dashboard'da veya Complete adımındaysak Yeni Sync butonu görünür */}\n                      {(step === 'dashboard' || step === 'complete') && (\n                          <button onClick={() => setStep('connect')} className=\"btn btn-primary\">\n                              ➕ Yeni Sync Oluştur\n                          </button>\n                      )}\n                      \n                  </div>\n                  {/* --------------------------- */}\n                </div>\n            </header>\n        )}\n        \n      <main>\n        {/* Adımı render eden fonksiyona yönlendiriyoruz */}\n        {renderConnectStepHomeOrApp()}\n      </main>\n\n      {/* 🚨 GLOBAL FOOTER: setStep'i ileterek her sayfada görünmesini sağlıyoruz */}\n      <FooterComponent setStep={setStep} /> \n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}